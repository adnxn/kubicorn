// Code generated by go-bindata.
// sources:
// bootstrap/README.md
// bootstrap/amazon_k8s_centos_7_master.sh
// bootstrap/amazon_k8s_centos_7_node.sh
// bootstrap/amazon_k8s_ubuntu_16.04_master.sh
// bootstrap/amazon_k8s_ubuntu_16.04_node.sh
// bootstrap/bootstrap_init.sh
// bootstrap/digitalocean_k8s_centos_7_master.sh
// bootstrap/digitalocean_k8s_centos_7_node.sh
// bootstrap/digitalocean_k8s_ubuntu_16.04_master.sh
// bootstrap/digitalocean_k8s_ubuntu_16.04_node.sh
// bootstrap/google_compute_k8s_ubuntu_16.04_master.sh
// bootstrap/google_compute_k8s_ubuntu_16.04_node.sh
// bootstrap/inject.go
// bootstrap/vpn/meshbirdMaster.sh
// bootstrap/vpn/meshbirdNode.sh
// bootstrap/vpn/openvpnMaster-centos.sh
// bootstrap/vpn/openvpnMaster.sh
// bootstrap/vpn/openvpnNode-centos.sh
// bootstrap/vpn/openvpnNode.sh
// DO NOT EDIT!

package bootstrap

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _bootstrapReadmeMd = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x64\x91\xb1\x6e\xdc\x30\x10\x44\x7b\x7e\xc5\x00\x57\xa4\x31\x94\x4f\x08\x90\x22\xc0\x15\x49\x65\x38\xad\x28\x71\x64\xae\x8f\xe2\x0a\xe4\xd2\x82\x10\xe4\xdf\x03\xea\x1c\x23\x81\xeb\xdd\xd9\x79\x3b\x73\xc1\x57\x55\xab\x56\xfc\xe6\xdc\x63\x64\x25\x7c\x21\x2c\x12\xd3\xdf\x01\xea\x5c\x64\xb3\x0a\x8b\xde\x50\xa3\x6c\xd8\xc5\xe2\xb9\x14\xb8\xf8\x96\x0c\xe3\xad\x4d\x32\x6b\xc9\x23\xb6\xa2\x8b\x24\xd6\xc1\xb9\x6f\x64\xc2\x52\x48\x98\xc2\x87\x80\x43\x5b\x81\xee\xf9\x01\x5a\xb0\x6a\x90\xe5\xe8\x67\xba\xab\xc1\xe7\x03\x26\x2b\x87\x93\xe4\xdd\xb5\xf3\x70\x59\x38\x9b\xbc\x32\x1d\xd8\x3b\xc5\x4e\xb4\xae\xaa\x18\x5b\x65\x41\xf0\xe6\xc7\xee\x22\x59\x0c\x1e\x4f\xdf\x9d\xbb\x5c\x2e\xb8\x22\x93\xa1\x0f\x8c\xeb\x96\xbc\x11\xda\x0c\x9a\x09\x5d\xde\xac\x3f\x3c\xea\xdc\x0f\xed\xa8\x08\x9a\x3f\xd9\x80\x9f\x45\x8c\x98\x7c\x8d\x48\x72\x23\x7c\xff\x71\xf8\xcf\x60\xd5\xc2\x13\x02\x92\xe1\x3f\x9c\xbc\x43\xd7\xa8\x2d\x05\x5c\x11\xf4\x8b\x73\xd7\xe5\xf4\x28\xf4\x29\x1d\x98\x7d\x86\xe6\x74\xe0\x99\x06\x31\x2c\x45\xd7\x7f\x53\xf5\x39\x20\xeb\x1e\xd9\xd3\x48\x95\x0f\xa7\xb8\xab\x7a\x0e\xbd\x8a\xf1\xc9\xa7\xc6\xfa\xeb\xf7\x88\x6a\xa5\xcd\xd6\xbf\x0e\x5c\x24\x13\x73\xab\xa6\x2b\x6e\x3c\x3e\xbf\xf6\x2d\x6c\x5e\xca\x5b\xa1\xbb\xa4\x84\x89\x90\xfc\xc2\xd9\x18\x20\xd9\xf4\xde\xd4\x1d\x7e\x70\x8f\x51\xea\xfb\x9e\xc7\xac\x81\x98\xa3\xcf\xcf\x7c\x38\xc1\xa4\x76\x11\x73\xb8\x47\x3d\x11\x2f\xad\xda\x79\x7e\xf8\x13\x00\x00\xff\xff\x8c\x9a\x9e\x97\x62\x02\x00\x00")

func bootstrapReadmeMdBytes() ([]byte, error) {
	return bindataRead(
		_bootstrapReadmeMd,
		"bootstrap/README.md",
	)
}

func bootstrapReadmeMd() (*asset, error) {
	bytes, err := bootstrapReadmeMdBytes()
	if err != nil {
		return nil, err
	}

<<<<<<< HEAD
<<<<<<< HEAD
	info := bindataFileInfo{name: "bootstrap/README.md", size: 610, mode: os.FileMode(420), modTime: time.Unix(1502322331, 0)}
=======
<<<<<<< HEAD
	info := bindataFileInfo{name: "bootstrap/README.md", size: 610, mode: os.FileMode(436), modTime: time.Unix(1501967388, 0)}
=======
	info := bindataFileInfo{name: "bootstrap/README.md", size: 610, mode: os.FileMode(420), modTime: time.Unix(1503343145, 0)}
>>>>>>> Working vnets
>>>>>>> Working vnets
=======
	info := bindataFileInfo{name: "bootstrap/README.md", size: 610, mode: os.FileMode(420), modTime: time.Unix(1503941556, 0)}
>>>>>>> Go fmt
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _bootstrapAmazon_k8s_centos_7_masterSh = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xc4\x56\x6f\x6f\x1b\x37\x0f\x7f\x7f\x9f\x82\x68\x02\xb8\x79\x50\x9d\x9a\x3c\x45\x37\x04\xf5\x80\xb5\x75\x81\xac\x5d\x13\xa4\xe9\x36\x60\x7f\x0a\x9d\x44\xdf\x29\xa7\x93\x54\x89\x8a\x73\x48\xf2\xdd\x07\xc9\x67\x37\x1e\xba\xbd\x58\x07\xd4\x6f\x2e\xa4\xc8\x1f\xc9\x1f\x45\x2a\x7b\xc0\xbe\xd2\xaf\xda\x83\x9f\x11\x44\x40\xc0\x6b\x6f\xb4\xd4\x64\x46\xb0\x8e\x20\x45\x6d\x5b\x10\x40\x38\x78\x23\x28\x0b\x46\xd8\x36\x89\x16\x81\x1c\x68\x7b\x89\x92\x80\x3a\x84\x2b\x61\x12\x46\x10\x31\xeb\xd1\x4a\x97\x42\x31\xea\x10\x52\xc4\x90\xb5\x46\x0f\xba\x18\xeb\x50\xed\x65\x2d\xb8\xe5\x0e\xb2\x6b\xb5\x04\x6d\xb3\x49\x44\x58\x6a\x83\xb1\x86\xe7\x23\x28\x8c\xba\xb5\x20\x8c\x99\x22\xa2\xda\xc4\x8b\x9d\x4b\x46\x41\x83\x20\x1a\x53\x72\x6a\x10\x22\x12\x08\x82\x90\x2c\xe9\x01\x1f\x55\x7b\x20\xac\x2a\xa9\xc4\x0e\x8d\x81\x28\x83\xf6\x04\x01\x85\x81\x95\x0b\x7d\x0d\x27\x4b\x18\x5d\x02\x8b\xa8\x40\x3a\xab\x34\x69\x67\x85\x59\xa7\xf4\x08\x56\x41\x13\x82\xa6\x9c\x5c\x23\x62\x07\x2e\xc0\x20\x7a\x04\x61\x1d\x75\x18\x76\x70\xeb\xea\x2b\x36\xb2\xda\x83\x97\x3a\x8a\xc6\x64\x42\xdf\x2d\xde\x68\x9b\xae\x41\xc7\xd2\xcc\x80\xd2\x0d\x03\x5a\x85\xaa\x10\xb2\xd2\xc6\x64\xba\x96\xfa\x1a\x15\x18\x41\x18\xea\x2a\x26\xe5\x20\xa2\x02\xa6\x61\x16\xf9\x1f\xef\x16\x6f\x4e\xde\xbe\xff\x65\x5e\xff\x8f\x6f\xfe\x54\x25\x00\x2a\xde\xce\x80\x23\x49\x1e\xc7\x28\x9d\x5d\xea\x96\x47\x34\x39\xe2\x06\x85\xd0\x2e\x5d\x90\x08\x8f\xab\xb5\x2a\xf8\x01\x18\xd3\x83\x77\x81\xa0\x23\xf2\xf1\x98\x73\x2f\x64\x2f\x5a\x8c\xb5\x34\x2e\xa9\xba\x75\xae\x35\x58\x4b\x37\xf0\x31\x0d\x5c\x39\x99\xbf\xac\xc7\xb1\x6e\x7d\xfb\x45\x38\xc1\x0f\x6c\xb2\xda\xe2\x4d\xb9\x76\xc0\x24\xcc\xa4\x20\x78\xf6\x6c\x71\xfa\x0a\xbe\x5b\x97\x36\xa6\xa1\x0e\xe8\x5d\xac\x15\xef\x53\x83\xc1\x22\x61\x2c\xaa\xea\xd7\x4f\x8a\xdf\x2b\x2b\x06\x9c\xbf\xde\x2a\xaa\x46\x44\x4c\xc1\xcc\x73\x72\xc7\xbc\xe0\xdc\xf3\xd7\x8e\x17\xd4\x7b\x98\x0c\xcd\x37\xec\xfa\xdb\xa7\x1f\x9e\x3e\xa9\xd0\x16\x82\xe7\x87\x55\xeb\x5b\xd9\xa1\xec\xe7\x87\x55\x76\xf8\x70\x4f\x6e\x7d\xdb\xe3\x38\xff\x77\x2c\xc2\xfa\xf7\x65\xd4\x2d\x4e\x5f\xcd\x26\xfe\xc6\x34\x94\x89\x90\x42\x76\x08\x6c\xfc\xa4\xd5\x36\x52\x9e\x5c\x36\xc2\x6f\xeb\xb0\xca\xc9\x1e\xc3\x46\x8a\x2e\x93\x3e\x09\xd8\x50\xae\x3c\x6e\xe4\x4c\x8f\x41\xba\x2f\x0a\x35\x6c\xc4\x92\x2c\x4b\xa4\xcd\xd6\x01\x3d\x1a\x16\xd0\xa0\x88\x98\x87\xe1\xf2\x63\x19\xea\x08\x9a\x22\xb8\x95\x85\xe8\x51\x6a\x61\x76\x52\x13\xf9\x18\x14\x7a\xb4\x2a\x82\xb3\xbb\x28\x9f\xab\xe4\xf2\xe3\xe6\xde\x8c\x91\x70\x90\x64\x60\xdd\xb3\xa9\xb8\xbf\x39\x9c\xca\xa9\x23\x86\x2b\x2d\xf1\xaf\x56\x91\x44\xa0\x0d\x42\x75\xf6\xfe\xf9\x9b\x93\x17\x27\x67\xf3\xfd\x87\x28\x8f\x06\x24\xa1\x04\x09\x60\xcc\xa7\xc6\x68\xc9\xb4\xbf\x7a\x02\xb7\x20\x13\x01\x53\xf0\x00\x1e\x00\x5b\xc2\xd1\x41\x75\x76\x7e\xf2\xd3\xf7\x17\x8b\xe2\xa8\x3d\x08\xa5\xf2\x7e\x72\x2b\x50\x78\x05\x48\xdd\x63\xb8\x05\xb1\xea\x61\xc6\xb5\x45\x02\x0e\x37\x3e\x68\x4b\xb0\x7f\x74\x37\xdb\xe2\x3d\xe0\x19\xee\xf0\xa0\xba\x38\x7d\xbd\x78\x3b\xdf\x7f\x98\x9b\x54\x26\xa2\x4f\x8d\x96\x2e\x58\x2e\x4d\x8a\x79\x65\x5c\x46\x67\xe1\x36\x33\xcd\x02\xcc\xea\xf5\x62\xae\x35\xe1\xf0\xa3\xf0\xf5\xc9\xdb\x1f\x16\x2f\x2e\x16\x2f\x0b\xce\xec\xa0\x3a\x3b\x3d\xbf\xf8\x0f\xe0\x32\x0c\xdc\x02\x39\x9b\x86\x06\xc3\xec\x20\x37\xfb\x1c\x3f\x26\x1d\x50\x41\x33\x6e\xae\xca\x96\xe2\xcc\x2f\x5b\x81\x45\xaa\x9b\xa0\x55\x8b\xd3\x87\xd9\x25\x93\xc2\x18\xa6\xfd\xfa\xea\xcd\x0f\x77\x7d\x7c\x55\x6d\xae\x5d\xc0\x88\xb4\x95\xb4\xd5\x04\x8c\x09\xaf\x73\x3b\x31\xb0\x46\x5b\xc5\xca\x46\xda\xbf\xc9\xf9\xdd\x01\x63\xe4\x7a\xb4\xb0\x7f\x53\xca\xbf\x83\x1d\x7b\xa1\xae\x30\x90\x8e\xc8\x72\x8f\x30\xc6\xec\x37\x35\xfd\x6e\xc7\x52\x62\x20\x86\xd7\x14\x04\x8b\xc2\xee\xda\xed\xdf\x6c\x1b\x7e\x97\x49\xb8\xe8\x84\xed\x23\xbc\x46\x13\x71\x84\xe3\x83\x92\x6f\xae\x44\x78\x6f\xd6\x33\xc8\x96\x30\xad\x25\xe5\x64\xac\x7d\x70\xf9\x51\x95\xc2\x68\xe9\x6a\x17\x5a\x7e\x75\x54\xff\x9f\xb7\x48\xf9\x59\x66\xe5\x56\xe2\xfd\xf5\xc7\xa7\x49\x10\xf9\x95\xe4\x9d\x8b\x9b\x63\xa1\x06\x7e\x58\x3f\xe5\x13\xd4\x28\x06\xb3\x0e\xc8\x4a\x12\xe5\x8d\xd8\xb6\x7d\x03\x26\xd4\xa0\x6d\x9d\x0f\xcb\xeb\x85\x4b\x91\x0c\x81\x44\x4b\x2e\x96\xff\x1d\xaa\xa1\x57\x3a\x00\xf3\xc0\x3b\x37\x20\x5f\x1f\xf1\xb2\x4f\x2b\xe9\xff\x01\xf0\x33\x0e\x7c\x9d\x45\x25\xbb\xbc\x0d\xd8\xf9\x14\xe8\x78\x8a\xf7\x99\x08\xd5\x9f\x01\x00\x00\xff\xff\xab\xca\xcd\x0d\x98\x09\x00\x00")

func bootstrapAmazon_k8s_centos_7_masterShBytes() ([]byte, error) {
	return bindataRead(
		_bootstrapAmazon_k8s_centos_7_masterSh,
		"bootstrap/amazon_k8s_centos_7_master.sh",
	)
}

func bootstrapAmazon_k8s_centos_7_masterSh() (*asset, error) {
	bytes, err := bootstrapAmazon_k8s_centos_7_masterShBytes()
	if err != nil {
		return nil, err
	}

<<<<<<< HEAD
<<<<<<< HEAD
	info := bindataFileInfo{name: "bootstrap/amazon_k8s_centos_7_master.sh", size: 2456, mode: os.FileMode(420), modTime: time.Unix(1505056408, 0)}
=======
<<<<<<< HEAD
	info := bindataFileInfo{name: "bootstrap/amazon_k8s_centos_7_master.sh", size: 2307, mode: os.FileMode(436), modTime: time.Unix(1502818123, 0)}
=======
	info := bindataFileInfo{name: "bootstrap/amazon_k8s_centos_7_master.sh", size: 2307, mode: os.FileMode(420), modTime: time.Unix(1503343145, 0)}
>>>>>>> Working vnets
>>>>>>> Working vnets
=======
	info := bindataFileInfo{name: "bootstrap/amazon_k8s_centos_7_master.sh", size: 2307, mode: os.FileMode(420), modTime: time.Unix(1503941556, 0)}
>>>>>>> Go fmt
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _bootstrapAmazon_k8s_centos_7_nodeSh = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xc4\x54\xef\x8b\xdc\x36\x10\xfd\xae\xbf\x62\x60\x0f\xb6\x29\x91\xdd\x83\x92\x96\x90\x2d\xb4\x3d\x07\xae\x49\xee\x20\x77\xa5\x85\xfe\x08\xb2\x34\x6b\xcf\x5a\x96\x7c\x1a\xa9\x7b\x26\xcd\xff\x5e\x64\xaf\x37\x7b\xa5\xfd\xd0\x26\x90\xfd\xe2\x9d\xa7\xd1\xd3\x9b\x37\x23\xad\x40\x7e\xa2\x9f\x58\xc1\x4f\x08\x2a\x20\xe0\xfd\x60\x49\x53\xb4\x23\x38\x1f\x21\x31\xb9\x06\x14\x44\xec\x07\xab\x62\x0e\xac\x72\x4d\x52\x0d\x42\xf4\x40\x6e\x87\x3a\x42\x6c\x11\xfe\x50\x36\x21\x83\xe2\x8c\xa3\xd3\x3e\x85\x29\xa9\x45\x48\x8c\x21\xa3\x96\x7a\x9a\x92\x29\x88\x55\x46\xc1\x6f\x1f\x30\xfb\x86\x34\x90\xcb\x29\x8c\xb0\x25\x8b\x5c\xc0\x77\x23\x18\x64\x6a\x1c\x28\x6b\x0f\x27\xa2\x59\xce\xe3\xd6\x27\x6b\xa0\x46\x50\xb5\x9d\x34\xd5\x08\x8c\x11\x54\x84\x90\x5c\xa4\x1e\x1f\x8b\x15\x28\x67\x26\x29\xdc\xa2\xb5\xc0\x3a\xd0\x10\x21\xa0\xb2\xb0\xf7\xa1\x2b\xe0\x72\x0b\xa3\x4f\xe0\x10\x0d\x68\xef\x0c\x45\xf2\x4e\xd9\x59\xd2\x63\xd8\x07\x8a\x08\x14\xb3\xb8\x5a\x71\x0b\x3e\x40\xaf\x3a\x04\xe5\x7c\x6c\x31\x3c\xe0\x2d\xc4\x27\x6c\xa4\x10\x2b\xb8\x20\x56\xb5\xcd\x8e\xde\x54\x2f\xc9\xa5\x7b\x20\x9e\xba\x19\x50\xfb\xbe\x47\x67\xd0\x4c\x8e\xec\xc9\xda\xec\xd7\x96\xee\xd1\x80\x55\x11\x43\x21\x38\x19\x0f\x8c\x06\x24\xc1\x9a\xcb\xdf\x6f\xaa\x97\x97\x57\x3f\xfe\xbc\x29\x3e\x2f\x97\xbf\x66\x3a\x00\x4d\xd9\xac\xa1\xc4\xa8\x4b\x1e\x59\x7b\xb7\xa5\xa6\x64\xb4\xf9\xc4\x85\x25\xa2\xdb\xfa\xa0\x11\xbe\x10\x33\x14\x86\x1e\xa4\xa4\x7e\xf0\x21\x42\x1b\xe3\xc0\x4f\xcb\x72\x50\xba\x53\x0d\x72\xa1\xad\x4f\xa6\x68\xbc\x6f\x2c\x16\xda\xf7\xe5\x98\xfa\xd2\x78\x9d\xbf\xb2\xc3\xb1\x68\x86\xe6\x83\x78\xc2\xd0\xcb\x43\xd6\x91\xef\xa0\xb5\x05\xa9\x61\xad\x55\x84\x67\xcf\xaa\xeb\xe7\xf0\xcd\x5c\xda\x98\xfa\x22\xe0\xe0\xb9\x30\x65\x97\x6a\x0c\x0e\x23\xf2\x04\x89\x5f\xde\x03\xbf\x09\xa7\x7a\xdc\xbc\x38\x02\xa2\x56\x8c\x29\xd8\x4d\x16\xf7\xb4\x9c\x78\x4e\xf6\x93\x2f\x27\xd6\x13\x4e\x89\xf6\x2b\x79\xff\xf5\x93\x37\x4f\xbe\x14\xe8\x26\x83\x37\xe7\xa2\x19\x1a\xdd\xa2\xee\x36\xe7\x22\x6f\x78\x73\x12\x37\x43\xd3\xe1\xb8\xf9\x7f\x2e\xc2\xfc\xfb\x30\xeb\xaa\xeb\xe7\xeb\x3c\x71\x27\x73\xb6\xcc\x46\xbe\x2a\x17\xd7\x05\xdc\xb6\xc4\xff\x69\xfe\xe6\x76\x8c\xa9\x9f\x6e\x98\x56\xba\x45\x90\xe3\x7b\x94\x1c\xc7\xfc\x12\xc8\x11\x7e\x9d\xab\x30\x5e\x77\x18\x96\x88\x7d\xee\xe1\x21\xc0\x3a\x66\x35\xbc\xc4\xd9\x6d\x8b\xf1\x34\x54\xa6\x3f\x66\x0f\x68\x65\x40\x8b\x8a\x31\x97\xb5\xbb\x9b\x5e\x04\x06\x8a\x0c\x7e\xef\x80\x07\xd4\xa4\xec\x03\x1d\x2a\x2f\x83\xc1\x01\x9d\x61\xf0\xee\x21\xcb\x3f\xc9\xde\xdd\x2d\x33\x37\x72\xc4\x5e\x47\x0b\x73\xbf\x0f\x95\xfc\xcb\xe2\x41\xfb\xdf\x57\x39\xaa\x10\x97\x9d\x62\x05\xaf\xf1\x2e\x51\x40\x03\xf5\xb8\xd4\x27\xf2\xfd\x8c\x16\xe4\x1e\x1c\xc6\xa2\x0e\x64\x1a\x3c\x7c\xa4\xdb\x4a\xad\xac\x95\x34\xcc\x56\x6d\xce\x8f\xe9\x83\x10\xb7\xd7\x2f\xaa\xab\xcd\xd9\x67\xd9\xd3\xe9\x3e\x74\xa9\x26\xed\x83\x2b\xb5\x4d\x9c\x1b\xb6\x63\xef\xe0\xcf\xec\x95\x0c\xb0\x2e\xe6\x77\xb9\xa0\x88\xfd\x2b\x35\x14\x97\x57\x3f\x54\xdf\xdf\x56\x17\x13\xcf\xfa\x91\x78\xf5\xed\xcd\x6d\xf5\xfa\x23\x10\xce\x44\xeb\x47\x07\x2b\x65\x75\x6c\x66\x40\x5e\x5c\x3a\x41\x77\x9e\x1c\x48\x19\x7d\x87\x0e\xce\xde\x4e\x7a\xde\xc1\xd9\xdb\x99\xe7\x9d\xf8\x2b\x00\x00\xff\xff\xd8\xe4\x0a\x39\x7d\x07\x00\x00")

func bootstrapAmazon_k8s_centos_7_nodeShBytes() ([]byte, error) {
	return bindataRead(
		_bootstrapAmazon_k8s_centos_7_nodeSh,
		"bootstrap/amazon_k8s_centos_7_node.sh",
	)
}

func bootstrapAmazon_k8s_centos_7_nodeSh() (*asset, error) {
	bytes, err := bootstrapAmazon_k8s_centos_7_nodeShBytes()
	if err != nil {
		return nil, err
	}

<<<<<<< HEAD
<<<<<<< HEAD
	info := bindataFileInfo{name: "bootstrap/amazon_k8s_centos_7_node.sh", size: 1917, mode: os.FileMode(420), modTime: time.Unix(1505056408, 0)}
=======
<<<<<<< HEAD
	info := bindataFileInfo{name: "bootstrap/amazon_k8s_centos_7_node.sh", size: 1774, mode: os.FileMode(436), modTime: time.Unix(1502818123, 0)}
=======
	info := bindataFileInfo{name: "bootstrap/amazon_k8s_centos_7_node.sh", size: 1774, mode: os.FileMode(420), modTime: time.Unix(1503343145, 0)}
>>>>>>> Working vnets
>>>>>>> Working vnets
=======
	info := bindataFileInfo{name: "bootstrap/amazon_k8s_centos_7_node.sh", size: 1774, mode: os.FileMode(420), modTime: time.Unix(1503941556, 0)}
>>>>>>> Go fmt
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _bootstrapAmazon_k8s_ubuntu_1604_masterSh = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xc4\x54\xc1\x4e\x24\x37\x10\xbd\xfb\x2b\x9e\x00\x89\x45\x5a\x77\xef\x6e\xa2\x44\x42\x22\x52\x76\xc3\x81\x6c\xb2\x8b\x10\x49\x2e\xb9\x54\xdb\x35\xdd\x66\xdc\x76\xaf\x5d\x06\x46\xc0\xbf\x47\xee\xe9\x21\x20\x91\x28\x87\x48\x3b\x97\x9e\x7a\x7e\xf5\xea\xc9\x55\xe5\x7d\xe8\xaf\xf4\x53\xfb\xf8\x83\x41\x89\xc1\xb7\x93\x77\xc6\x89\xdf\x20\x44\x41\xc9\x2e\xf4\x20\x08\x8f\x93\x27\xa9\x81\xa7\xd0\x17\xea\x19\x12\xe1\xc2\x15\x1b\x81\x0c\x8c\x6b\xf2\x85\x33\x28\x57\x9c\x83\x89\x25\xcd\xa4\x81\x51\x32\xa7\x8a\x7a\x37\xba\x99\xec\x92\xda\xaf\x28\xe2\xea\x99\x72\xec\x9d\x81\x0b\x95\x92\x19\x2b\xe7\x39\x37\x78\xbf\x81\xe5\xec\xfa\x00\xf2\x7e\xa9\xc8\x76\x57\x2f\x0f\xb1\x78\x8b\x8e\x41\x9d\x9f\x3d\x75\x8c\xcc\x02\x12\xa4\x12\xc4\x8d\xfc\x5a\xed\x83\x82\x9d\xad\xe4\x81\xbd\x47\x36\xc9\x4d\x82\xc4\xe4\x71\x13\xd3\xba\xc1\xd9\x0a\x9b\x58\x10\x98\x2d\x4c\x0c\xd6\x89\x8b\x81\xfc\xd6\xd2\x6b\xdc\x24\x27\x0c\x27\xd5\x5c\x47\x79\x40\x4c\x18\x69\xcd\xa0\x10\x65\xe0\xf4\x4c\xb7\x51\x5f\xb1\x91\xca\x94\xe4\xa1\x33\x06\x91\x29\x1f\xb7\xed\x44\x66\x4d\x3d\xe7\xc6\xf8\x58\x6c\xd3\xc7\xd8\x7b\x6e\x4c\x1c\x5b\x9a\xa4\xb5\xd1\xd4\xaf\x5e\xf3\xa6\xe9\xa7\x1e\xf7\xc8\xc5\x46\x2c\x10\xc8\x5a\x68\x25\xb1\x98\x01\x2d\xcb\xcc\x6d\x73\x2c\xc9\x70\x6e\xbc\xcb\xd2\xd8\x76\x5d\x3a\x4e\x81\x65\x41\x54\x1e\xa0\x0d\x0e\xd9\x0c\x11\x7b\x96\xbb\xd9\xc9\x71\x5b\x53\x9b\x27\x5c\x17\x5b\xfc\x1d\xea\x5b\x0e\x8e\x3c\x46\x72\x61\x0f\x3f\xfc\xd7\x62\x87\x4a\x55\xab\x3d\x0b\xca\x64\x49\x18\x7a\xf3\x88\xb8\x90\xa5\x8e\x8c\xde\xe0\x4f\x05\x00\x39\x1a\x92\xe5\x3f\x77\x52\x07\x26\x2f\xa1\x8d\x66\xcd\xa9\x71\x71\x89\xab\x86\x24\x0a\x79\x8a\x49\xf4\x7c\x97\xcb\x49\x75\xe0\x59\x9e\x44\x64\xc7\x93\xb7\xcd\xf7\xcd\x1b\xfd\xe6\xcd\x02\xcf\x77\xad\x8b\x38\xbf\x4b\xbb\xfa\xa2\x94\xca\x9b\x2c\x3c\x1a\xf1\xe0\x30\x8f\xeb\xb6\xec\x13\x3c\x0b\x25\xd9\xc1\xea\xfc\xb7\xf7\xbf\x9c\x7d\x38\x3b\x3f\x39\x78\xc5\xe6\xdd\xc8\x42\x96\x84\xa0\xf5\x54\x3a\xef\x8c\x76\xd3\xf5\xb7\xb8\x87\x29\x02\x6d\xb1\x87\x3d\xe8\x15\xde\x1d\xa9\xf3\x8b\xb3\xdf\x7f\xbc\x3c\x7d\x21\xd1\x47\x43\xfe\x1f\xf3\x2e\x3f\x7f\x3c\xfd\x74\x72\xf0\xaa\x5e\xd3\xdc\x81\x75\xe9\x9c\x89\x29\xb4\xc6\x97\x2c\x9c\x9a\xab\x1c\x03\xee\x71\xf5\x05\x3a\xe1\xb0\xd9\x2e\x61\xe3\x84\xc7\x5f\x69\x6a\xce\x3e\xfd\x7c\xfa\xe1\xf2\xf4\xa7\x59\xe7\xf0\x48\x9d\x7f\xbe\xb8\xfc\x1f\xe4\xaa\x0c\xee\x21\x31\x94\xb1\xe3\x74\x78\xa4\xd4\x72\xef\x48\x9c\x59\x1e\x23\x17\x9c\x40\x6b\x9a\x5c\xe6\x74\xcd\x49\x77\x2e\x58\x5d\x5b\x88\x83\xbb\xaa\xf2\x00\xad\x25\xae\x39\xe0\xe0\x6e\x36\xf9\x80\x67\x7c\xb2\xd7\x9c\xc4\x65\xd6\x64\x6d\xe2\x9c\x6b\xde\xd2\x84\x87\x67\x4c\xc3\x49\x34\xdf\x4a\x22\x9d\x29\x3c\xe7\x1d\xdc\x3d\x36\xe0\x41\xa9\x7d\x5c\x0e\x14\xd6\x19\x1f\xd9\x67\xde\xe0\xf8\x68\xf6\x5b\xbb\x4d\xd3\xe4\xb7\xc3\xa9\x57\xbb\x35\xb1\xd1\xe4\x66\x4a\xb1\x3e\x73\x86\xbc\x33\xb1\x89\xa9\x6f\xaf\xdf\x35\xdf\xb4\x3d\x4b\x7d\x28\xf5\x3c\x25\xfc\x74\x1b\xda\x65\xd8\xa9\xbe\x5b\xed\x10\xf3\xee\x98\xec\xd8\xbe\x6d\xbe\x6b\x17\xa9\x0d\x8d\x7e\x5b\x50\xcf\x26\x62\x58\xb9\xfe\xb1\x39\x3b\x31\xb2\xa3\x0b\x4d\x3d\x54\x6a\x5c\x5b\x97\xa0\x27\xb4\x43\x1c\xb9\x2d\x5d\x09\x52\xda\x79\x93\x95\x99\xfe\x25\xf5\x85\x84\x76\x5b\x4f\x99\x21\xde\x04\xe8\x0b\x6c\x0f\x8f\xb7\x9f\x97\x2a\xfc\x15\x00\x00\xff\xff\x50\x7d\x39\xdb\x13\x07\x00\x00")

func bootstrapAmazon_k8s_ubuntu_1604_masterShBytes() ([]byte, error) {
	return bindataRead(
		_bootstrapAmazon_k8s_ubuntu_1604_masterSh,
		"bootstrap/amazon_k8s_ubuntu_16.04_master.sh",
	)
}

func bootstrapAmazon_k8s_ubuntu_1604_masterSh() (*asset, error) {
	bytes, err := bootstrapAmazon_k8s_ubuntu_1604_masterShBytes()
	if err != nil {
		return nil, err
	}

<<<<<<< HEAD
<<<<<<< HEAD
	info := bindataFileInfo{name: "bootstrap/amazon_k8s_ubuntu_16.04_master.sh", size: 1811, mode: os.FileMode(420), modTime: time.Unix(1505054052, 0)}
=======
<<<<<<< HEAD
	info := bindataFileInfo{name: "bootstrap/amazon_k8s_ubuntu_16.04_master.sh", size: 1779, mode: os.FileMode(436), modTime: time.Unix(1502293337, 0)}
=======
	info := bindataFileInfo{name: "bootstrap/amazon_k8s_ubuntu_16.04_master.sh", size: 1779, mode: os.FileMode(420), modTime: time.Unix(1503343145, 0)}
>>>>>>> Working vnets
>>>>>>> Working vnets
=======
	info := bindataFileInfo{name: "bootstrap/amazon_k8s_ubuntu_16.04_master.sh", size: 1779, mode: os.FileMode(420), modTime: time.Unix(1503941556, 0)}
>>>>>>> Go fmt
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _bootstrapAmazon_k8s_ubuntu_1604_nodeSh = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xc4\x53\x4d\x4f\xdd\x3a\x14\xdc\xfb\x57\x8c\xb8\x48\xf7\x21\x11\x87\xb7\x7a\x12\x12\x4f\xea\xc7\x5d\xd0\x0a\x2a\xb5\x48\xdd\x74\xe3\xd8\x87\xc4\x37\x8e\x1d\x7c\x8e\x0b\x57\xc0\x7f\xaf\x92\x1b\x28\xec\xba\xa8\x44\x36\xc9\x4c\xc6\x33\xe3\xe4\x78\x85\xea\x8d\x2e\xb5\xc2\x77\x82\xc9\x04\xba\x1b\x83\xb7\x5e\xc2\x0e\x31\x09\x0a\xfb\xd8\xc2\x40\x68\x18\x83\x91\x09\x04\x13\xdb\x62\x5a\x82\x24\xf8\xb8\x25\x2b\x90\x8e\xf0\xd3\x84\x42\x0c\xc3\x13\x4f\xd1\xa6\x92\x67\x51\x47\x28\x4c\x79\x62\x83\x1f\xfc\x2c\xf6\x59\xad\x26\x16\xe9\xfa\x95\x73\x6a\xbd\x85\x8f\x93\x84\x09\xd7\x3e\x10\x6b\xbc\xdf\xc1\x11\xfb\x36\xc2\x84\xb0\x24\x92\x7b\xca\xe3\x2e\x95\xe0\xd0\x10\x4c\x13\xe6\x4e\x0d\x81\x49\x60\x04\xb9\x44\xf1\x03\x1d\xab\x15\x4c\x74\x73\x15\xee\x28\x04\xb0\xcd\x7e\x14\x64\x32\x01\xb7\x29\xf7\x1a\xe7\xd7\xd8\xa5\x82\x48\xe4\x60\x53\x74\x5e\x7c\x8a\x26\xec\x2b\x1d\xe3\x36\x7b\x21\x78\x99\xca\x35\x86\x3b\xa4\x8c\xc1\xf4\x04\x13\x93\x74\x94\x5f\xf9\x6a\xf5\x86\x3f\x52\xd9\x92\x03\x2a\x46\x27\x32\xf2\x69\x5d\x8f\xc6\xf6\xa6\x25\xd6\x36\xa4\xe2\x74\x9b\x52\x1b\x48\xdb\x34\xd4\x66\x94\xda\x25\x3b\xdd\xab\x9e\x76\xba\x1d\x5b\x3c\x80\x8b\x4b\x58\x28\x18\xe7\x50\x29\x49\xc5\x76\xa8\x49\x66\x6d\xcd\xa9\x64\x4b\xac\x83\x67\xd1\xae\xee\x4b\x43\x39\x92\x2c\x8c\xe2\x0e\x95\xc5\x9a\x6c\x97\x70\xe0\xa8\x99\x9b\x9c\xd6\xd3\x52\xfd\x42\xeb\x53\x8d\xdf\xb0\xba\xa3\xe8\x4d\xc0\x60\x7c\x3c\xc0\xff\x7f\x1a\xb6\x56\x6a\xaa\xda\x92\xa0\x8c\xce\x08\xa1\xda\x3d\x33\x3e\xb2\x4c\x23\x53\xed\xf0\x43\x01\x00\x27\x6b\x64\x79\xa6\x46\xa6\x81\xe1\x05\xba\x64\x7b\xca\xda\xa7\x05\x4f\x1e\x92\x4d\xe4\x31\x65\xa9\xe6\x6f\xb9\xbc\x99\x1a\x04\x92\x17\xc8\xb8\xe1\xec\x5f\xfd\x9f\x3e\xa9\x4e\x4e\x16\x7a\x7b\xa3\x14\xef\x58\x68\xb0\x12\x40\x71\x9e\xcd\x7d\xc6\x0b\x9e\xc5\x64\x79\xa2\x95\xba\xfa\xf2\x79\x73\x79\x76\xf8\xcf\x54\x72\xde\x7f\x5f\x1a\x6f\x53\x8e\xb5\x0d\x85\x85\xb2\xde\x72\x8a\x78\xc0\xf6\x06\x55\xc6\x5a\xef\x8f\x80\xf6\x42\xc3\x85\x19\xf5\xf9\xe5\xa7\xcd\x87\xab\xcd\xc7\xd9\x67\x7d\xa4\x2e\xde\x7d\xbb\xda\x7c\xfd\x0b\x86\x7b\xa3\xf5\x91\x52\xcb\x76\x91\x89\x49\x9e\xd1\x36\xf9\x88\xaa\x92\xd4\x53\xc4\xe1\xfd\x9c\xff\x88\xc3\xfb\xfd\xba\xc7\x5f\x01\x00\x00\xff\xff\xcc\xb2\x8a\xbe\xd7\x04\x00\x00")

func bootstrapAmazon_k8s_ubuntu_1604_nodeShBytes() ([]byte, error) {
	return bindataRead(
		_bootstrapAmazon_k8s_ubuntu_1604_nodeSh,
		"bootstrap/amazon_k8s_ubuntu_16.04_node.sh",
	)
}

func bootstrapAmazon_k8s_ubuntu_1604_nodeSh() (*asset, error) {
	bytes, err := bootstrapAmazon_k8s_ubuntu_1604_nodeShBytes()
	if err != nil {
		return nil, err
	}

<<<<<<< HEAD
<<<<<<< HEAD
	info := bindataFileInfo{name: "bootstrap/amazon_k8s_ubuntu_16.04_node.sh", size: 1239, mode: os.FileMode(420), modTime: time.Unix(1505054052, 0)}
=======
<<<<<<< HEAD
	info := bindataFileInfo{name: "bootstrap/amazon_k8s_ubuntu_16.04_node.sh", size: 1194, mode: os.FileMode(436), modTime: time.Unix(1502272644, 0)}
=======
	info := bindataFileInfo{name: "bootstrap/amazon_k8s_ubuntu_16.04_node.sh", size: 1194, mode: os.FileMode(420), modTime: time.Unix(1503343145, 0)}
>>>>>>> Working vnets
>>>>>>> Working vnets
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _bootstrapBootstrap_initSh = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xa4\x90\x41\x4e\xc4\x30\x0c\x45\xf7\x39\xc5\x67\xb2\xa5\xea\x69\x38\x40\x9a\xfc\x49\x83\x8a\x5d\xd9\x6e\xd1\x6c\x38\x3b\xea\x68\x4e\x00\x5e\xda\x7e\x7a\xd2\xcb\x6f\xf3\xe1\x36\x2f\x43\x66\xca\x89\xa5\xf8\x9a\x52\x9e\xfe\x3c\x29\xe3\xc3\xd9\xa0\xb2\x3d\x10\x0a\x67\xc0\x57\x2e\x45\x3a\x8a\x34\x68\xac\x34\x50\xce\x61\x2a\x5f\x94\x78\x20\xd6\x21\xdd\x53\x7e\xde\x87\xa3\xb4\xc6\x76\xb1\xb1\x12\x0b\xfb\x10\x19\xd2\xa1\xf7\x17\xbc\xa8\x86\x87\x95\x1d\x5e\x6d\xec\xe1\xef\x29\x63\x48\xdd\x8e\x76\xfd\x5d\x54\xa7\xd0\x4a\xb0\xe1\xf6\x6d\x23\xf8\x5c\xd6\xed\xf0\xa0\xa1\x38\x3e\x5d\xe5\x06\x15\xa6\x7c\x89\xaa\xb1\x04\x51\xe0\x43\xfa\x46\x1c\x4e\x9b\x5a\x89\xf2\x32\xe0\xae\x86\xba\xe9\xd1\xb0\x9b\x9e\xa3\xd1\xfc\x5f\x91\xae\x2a\x13\x53\x6d\xf8\x49\xbf\x01\x00\x00\xff\xff\x21\xee\xd3\xad\x82\x01\x00\x00")

func bootstrapBootstrap_initShBytes() ([]byte, error) {
	return bindataRead(
		_bootstrapBootstrap_initSh,
		"bootstrap/bootstrap_init.sh",
	)
}

func bootstrapBootstrap_initSh() (*asset, error) {
	bytes, err := bootstrapBootstrap_initShBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "bootstrap/bootstrap_init.sh", size: 386, mode: os.FileMode(420), modTime: time.Unix(1504881632, 0)}
=======
	info := bindataFileInfo{name: "bootstrap/amazon_k8s_ubuntu_16.04_node.sh", size: 1194, mode: os.FileMode(420), modTime: time.Unix(1503941556, 0)}
>>>>>>> Go fmt
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _bootstrapDigitalocean_k8s_centos_7_masterSh = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xc4\x55\xd1\x6f\x1c\xb5\x13\x7e\xf7\x5f\x31\x6a\x22\xdd\x2f\x52\xbd\xfb\x4b\x41\x05\x55\x3d\x24\xda\x5e\xa5\xd0\xd2\x44\x25\xc0\x03\xa0\xca\x6b\xcf\xed\x4e\xd6\x6b\xbb\xf6\x38\x97\x53\x12\xfe\x76\xe4\xdd\xbd\x23\x27\x10\x0f\x14\xa9\xfb\xb2\x9a\xf1\xf8\xf3\xe7\xf9\x66\xc6\x47\x20\x3f\xd3\x27\x8e\xe0\x67\x04\x15\x11\xf0\x26\x58\xd2\xc4\x76\x0b\xce\x33\xe4\x44\xae\x05\x05\x8c\x43\xb0\x8a\x8b\x61\x95\x6b\xb3\x6a\x11\xd8\x03\xb9\x2b\xd4\x0c\xdc\x21\x5c\x2b\x9b\x31\x81\x4a\xc5\x8f\x4e\xfb\x1c\xc7\xa0\x0e\x21\x27\x8c\xc5\x6b\x69\xa0\x31\x98\xa2\x38\x2a\x5e\xf0\xeb\x03\x64\xdf\x92\x06\x72\x25\x24\x21\xac\xc9\x62\xaa\xe0\xc5\x16\x0c\x26\x6a\x1d\x28\x6b\xe7\x13\xd1\xec\xce\x4b\x9d\xcf\xd6\x40\x83\xa0\x1a\x3b\x72\x6a\x10\x12\x32\x28\x86\x98\x1d\xd3\x80\x8f\xc5\x11\x28\x67\x46\x2a\xa9\x43\x6b\x21\xe9\x48\x81\x21\xa2\xb2\xb0\xf1\xb1\xaf\xe0\x6c\x0d\x5b\x9f\xc1\x21\x1a\xd0\xde\x19\x62\xf2\x4e\xd9\x89\xd2\x63\xd8\x44\x62\x04\xe2\x42\xae\x51\xa9\x03\x1f\x61\x50\x3d\x82\x72\x9e\x3b\x8c\x07\xb8\x95\xf8\x8c\x42\x8a\x94\x8d\x87\x18\x06\x90\x92\x86\xe0\x23\x43\xc7\x1c\xd2\xb3\xba\x0e\x4a\xf7\xaa\xc5\x54\x69\xeb\xb3\xa9\x5a\xef\x5b\x8b\x95\xf6\x43\xbd\xcd\x43\x6d\xbc\x2e\x7f\xd9\xe3\xb6\x6a\x43\xfb\x49\x38\x31\x0c\x72\x8e\xda\xe3\x4d\x80\xa9\x03\xa9\x61\xa1\x15\xc3\xf3\xe7\xab\xf3\xd7\xf0\x0d\xd4\xc8\xe3\xc9\x55\xc4\xe0\x53\x65\xea\x3e\x37\x18\x1d\x32\xa6\xd1\x25\x7e\xf9\xd3\xf1\x9b\x70\x6a\xc0\xe5\x9b\xbd\x43\x34\x2a\x61\x8e\x76\x59\xc8\x3d\xab\x47\x9c\x07\xfb\xc9\xd7\x23\xea\x03\x4c\x89\xf6\x2b\x79\xf3\xf5\xd3\x0f\x4f\xbf\x14\xe8\x4a\xd1\x98\xe5\xa9\x68\x43\xab\x3b\xd4\xfd\xf2\x54\x94\x0d\x1f\x1e\xd8\x6d\x68\x7b\xdc\x2e\xff\x5d\x16\x61\xfa\x3e\x2d\x75\xab\xf3\xd7\x0b\x21\x8e\xe0\x87\xd5\x5b\x72\xf9\x06\x28\x81\xa1\x34\x52\x87\xa6\x74\xc7\x5a\x65\x3b\xd6\xe6\xab\xf3\x0a\x2e\x3b\x4a\x25\xa4\xb4\x6f\x44\xed\x87\x01\x9d\x41\x33\xb6\xc0\x86\xac\x2d\x0d\xb2\xa6\x1b\x34\x60\x15\x63\xac\x66\x65\xb6\x79\x18\x4b\x5a\x2b\xdd\x21\xc8\xed\xac\xd7\x6e\x89\x5c\xe2\xd2\x7f\x72\x0b\xbf\x4e\xb7\x32\x5e\xf7\x18\x77\x56\xf2\x45\xd3\xd9\xc0\x86\x0b\xbb\xb4\xb3\x4b\xf6\x2d\xf2\x43\x53\x99\x61\x67\x8e\xb9\x90\x99\xc9\xee\x37\x60\x40\x2b\x23\x5a\x54\x09\xcb\xcd\xaf\x3e\x8e\xad\x99\x80\x38\x81\xdf\x38\x48\x01\x35\x29\x7b\x40\x4d\x95\x65\x30\x18\xd0\x99\x04\xde\x1d\xa2\xfc\xdd\x4d\xae\x3e\x0a\x91\xb6\x89\x71\xd0\x6c\x61\xaa\x86\xf9\x5e\x7f\xf5\xcf\x97\xa8\x12\xc6\x6b\xd2\xf8\x20\x20\xb1\x8a\xbc\xdb\x27\x2e\x7e\x7c\xf1\xf6\xec\xe5\xd9\xc5\xf2\xf8\x7f\x3a\x47\x0b\xb4\xd6\xde\xad\xa9\xad\x06\x3c\x11\x17\xef\xcf\x7e\xfa\xf6\x72\x35\xae\x52\x00\x65\x4c\x99\x1d\x7e\x03\x06\xaf\x81\xb3\xfb\x3f\xdc\x81\xda\xf4\xb0\xa8\xc9\x21\x43\x0d\xb7\x21\x92\x63\x38\x7e\x72\xbf\x80\x3b\xd0\x99\x41\x9a\x47\xf5\x23\x90\xeb\xd3\x13\x81\xba\xf3\x70\xbc\xc7\x2c\xcd\xc4\x43\xa8\x2b\x0a\x42\x5c\x9e\xbf\x59\xbd\x2b\x1c\x14\x4f\x2d\xd6\xe7\x86\xb4\x8f\xae\xd6\x36\xa7\x22\xfc\x55\xf2\x0e\xee\x4a\x6e\x65\x84\x45\x35\x0d\xd4\x8a\x18\x87\xef\x55\xa8\xce\xde\x7d\xb7\x7a\x79\xb9\x7a\x35\xe2\x2c\x4e\xc4\xc5\xf9\xfb\xcb\xff\x00\xae\xc0\xc0\x1d\xb0\x77\x79\x68\x30\x2e\x4e\x8a\xbc\xef\xf1\x63\xa6\x38\x55\xf3\x5c\x1c\x25\xbd\x25\xb7\x72\x03\x0e\xb9\x6a\x22\x99\x16\xe7\x9f\x74\x6b\xa9\x95\xb5\x92\xc2\x54\x67\xcb\xd3\x7d\x78\x10\x62\x57\x5e\x11\x13\xf2\xde\x22\x47\x0c\x52\xaa\x40\x45\x40\x8c\xb2\x21\x67\xe4\x38\xd8\x8e\x6f\x0b\xab\x7b\x90\x92\x7d\x8f\x0e\x8e\x6f\xc7\x4b\xdf\xc3\x41\xbc\x32\xd7\x18\x99\x12\xca\xa2\x1a\xa6\x54\xf6\xcd\x5a\xdf\x1f\x44\x6a\x8c\x2c\xf1\x86\xa3\x92\x49\xb9\xc3\xb8\xe3\xdb\xbd\x5c\xf7\x13\xd5\x42\x5b\x85\x60\xa7\xc6\x92\x6b\x98\x47\x99\xf1\x3a\x55\x21\xfa\xf2\xde\x69\x65\x49\xfb\xca\xc7\xb6\xbe\x7e\x52\x7d\x51\xb7\xc8\xe5\xc5\x94\x63\xe5\xe1\xc3\x91\x59\xcf\xe5\xad\xca\x03\x56\x77\x3e\xed\x96\x95\x19\xea\xd3\xea\x69\x3d\x43\x6d\xd5\x60\xa7\x03\xe5\x48\x62\x2c\xd1\xbd\xb2\x3b\x30\x65\x06\x72\x55\x59\x1c\x65\xf2\x9e\xc5\xd0\x1b\x8a\x20\x03\xfc\x5e\x8f\x93\x56\xe8\xf0\x0f\xdb\x76\x51\xf5\x74\x80\xf8\x23\x00\x00\xff\xff\x05\xab\x5f\x61\xe3\x08\x00\x00")

func bootstrapDigitalocean_k8s_centos_7_masterShBytes() ([]byte, error) {
	return bindataRead(
		_bootstrapDigitalocean_k8s_centos_7_masterSh,
		"bootstrap/digitalocean_k8s_centos_7_master.sh",
	)
}

func bootstrapDigitalocean_k8s_centos_7_masterSh() (*asset, error) {
	bytes, err := bootstrapDigitalocean_k8s_centos_7_masterShBytes()
	if err != nil {
		return nil, err
	}

<<<<<<< HEAD
<<<<<<< HEAD
	info := bindataFileInfo{name: "bootstrap/digitalocean_k8s_centos_7_master.sh", size: 2275, mode: os.FileMode(420), modTime: time.Unix(1505275252, 0)}
=======
<<<<<<< HEAD
	info := bindataFileInfo{name: "bootstrap/digitalocean_k8s_centos_7_master.sh", size: 2120, mode: os.FileMode(436), modTime: time.Unix(1502639666, 0)}
=======
	info := bindataFileInfo{name: "bootstrap/digitalocean_k8s_centos_7_master.sh", size: 2120, mode: os.FileMode(420), modTime: time.Unix(1503343145, 0)}
>>>>>>> Working vnets
>>>>>>> Working vnets
=======
	info := bindataFileInfo{name: "bootstrap/digitalocean_k8s_centos_7_master.sh", size: 2120, mode: os.FileMode(420), modTime: time.Unix(1503941556, 0)}
>>>>>>> Go fmt
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _bootstrapDigitalocean_k8s_centos_7_nodeSh = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xc4\x54\xdf\x8b\xdc\x36\x10\x7e\xd7\x5f\x31\xb0\x07\xdb\x40\x64\x73\x50\xd2\x12\xb2\x85\xb6\xd9\x40\x9a\x26\x07\xc9\x41\x1f\xda\x12\x64\x69\xd6\x9e\xb5\x2c\xe9\x34\x52\xf7\x4c\x9a\xff\xbd\xc8\x3f\xb6\x7b\xa5\x7d\x69\x02\xf1\x8b\x98\x4f\xa3\x4f\x9f\xbe\x99\xf1\x06\xe4\x17\xfa\xc4\x06\x7e\x41\x50\x11\x01\xef\x83\x25\x4d\xc9\x8e\xe0\x7c\x82\xcc\xe4\x5a\x50\x90\x70\x08\x56\xa5\x12\x58\xe5\xda\xac\x5a\x84\xe4\x81\xdc\x11\x75\x82\xd4\x21\xfc\xa1\x6c\x46\x06\xc5\x05\x47\xa7\x7d\x8e\x53\x52\x87\x90\x19\x63\x41\x2d\x0d\x34\x25\x53\x14\x9b\x82\x82\x3f\x3c\x60\xf6\x2d\x69\x20\x57\x52\x18\xe1\x40\x16\xb9\x82\x1f\x46\x30\xc8\xd4\x3a\x50\xd6\x2e\x37\xa2\x59\xef\xe3\xce\x67\x6b\xa0\x41\x50\x8d\x9d\x34\x35\x08\x8c\x09\x54\x82\x98\x5d\xa2\x01\x1f\x8b\x0d\x28\x67\x26\x29\xdc\xa1\xb5\xc0\x3a\x52\x48\x10\x51\x59\x38\xf9\xd8\x57\xf0\xf2\x00\xa3\xcf\xe0\x10\x0d\x68\xef\x0c\x25\xf2\x4e\xd9\x59\xd2\x63\x38\x45\x4a\x08\x94\x8a\xb8\x46\x71\x07\x3e\xc2\xa0\x7a\x04\xe5\x7c\xea\x30\x3e\xe0\xad\xc4\x17\x2c\xa4\x10\x9c\x8d\x87\x18\x06\x90\x92\x86\xe0\x63\x82\x2e\xa5\xc0\x4f\xeb\x3a\x28\xdd\xab\x16\xb9\xd2\xd6\x67\x53\xb5\xde\xb7\x16\x2b\xed\x87\x7a\xcc\x43\x6d\xbc\x2e\xab\xec\x71\xac\xda\xd0\x7e\x12\x4f\x0c\x83\x5c\xb2\xce\x7c\x33\x21\x77\x20\x35\x6c\xb5\x4a\xf0\xec\xd9\xfe\xe6\x05\x7c\x07\x35\xa6\xe9\xe6\x2a\x62\xf0\x5c\x99\xba\xcf\x0d\x46\x87\x09\x79\x82\xc4\xaf\x7f\x03\xbf\x0b\xa7\x06\xdc\xbd\x3a\x03\xa2\x51\x8c\x39\xda\x5d\x11\xf7\xb4\x9e\x78\x2e\xce\x93\xaf\x27\xd6\x0b\x4e\x89\xf6\x1b\x79\xff\xed\x93\xf7\x4f\xbe\x16\xe8\x4a\xd7\x98\xdd\xb5\x68\x43\xab\x3b\xd4\xfd\xee\x5a\x94\x03\xef\x2f\xe2\x36\xb4\x3d\x8e\xbb\xff\xe7\x22\xcc\xdf\xa7\x59\xb7\xbf\x79\xb1\x15\x62\x03\xef\xf6\x3f\x93\xcb\xf7\x40\x0c\x86\x78\x92\x5e\x3a\xf2\xf9\x4d\x05\xb7\x1d\x71\xc1\xcb\xd0\x46\xd4\x7e\x18\xd0\x19\x34\x53\xe3\x9f\xc8\xda\x32\x16\x07\xba\x47\x03\x56\x25\x8c\xd5\x52\x8e\x31\x0f\x53\x23\x6b\xa5\x3b\x04\x39\x2e\x45\x5a\xb7\xc8\x71\x2a\x53\x27\x47\xf8\x6d\x7e\x8a\xf1\xba\xc7\xb8\x46\xec\x4b\x21\x97\x00\x9b\x54\x24\xf1\x1a\x17\xcb\x2d\xa6\xcb\x50\x99\xe1\x9c\x1d\xd0\xca\x88\x16\x15\x63\x79\xdb\xf1\x6e\x9a\x3e\x06\x4a\x0c\xfe\xe4\x80\x03\x6a\x52\xf6\x81\x0e\x55\xb6\xc1\x60\x40\x67\x18\xbc\x7b\xc8\xf2\x6f\xb2\x8f\x77\x6b\xe3\x8d\x9c\x70\xd0\xc9\xc2\x5c\xf4\xe5\x25\xff\xb1\xb9\x68\xff\xe7\x2e\x27\x15\xd3\x7a\x52\x6c\xe0\x2d\xde\x65\x8a\x68\xa0\x19\xd7\xf7\x09\x1e\xb9\xa4\xca\x13\x38\x4c\x55\x13\xc9\xb4\xb8\x2c\xd2\x1d\xa4\x56\xd6\x4a\x0a\xb3\x55\xbb\xeb\x73\x7a\x10\xe2\xf6\xe6\xd5\xfe\xcd\xee\xea\xab\xe2\xe9\x34\x14\x7d\x6e\x48\xfb\xe8\x6a\x6d\x33\x97\xaa\x1d\xd9\x3b\xf8\xb3\x78\x25\x23\x6c\xab\xf9\x1f\x58\x51\xc2\xe1\xb5\x0a\xd5\xcb\x37\x3f\xed\x7f\xbc\xdd\x3f\x9f\x78\xb6\x8f\xc4\xeb\xef\xdf\xdd\xee\xdf\x7e\x06\xc2\x99\x68\xfb\x68\xb1\x52\xee\xcf\xc5\x8c\xc8\xab\x4b\x17\xe8\xd1\x93\x03\x29\x93\xef\xd1\xc1\xd5\x87\x49\xcf\x47\xb8\xfa\x30\xf3\x7c\x14\x7f\x05\x00\x00\xff\xff\xa1\x4e\x06\x7a\xe9\x06\x00\x00")

func bootstrapDigitalocean_k8s_centos_7_nodeShBytes() ([]byte, error) {
	return bindataRead(
		_bootstrapDigitalocean_k8s_centos_7_nodeSh,
		"bootstrap/digitalocean_k8s_centos_7_node.sh",
	)
}

func bootstrapDigitalocean_k8s_centos_7_nodeSh() (*asset, error) {
	bytes, err := bootstrapDigitalocean_k8s_centos_7_nodeShBytes()
	if err != nil {
		return nil, err
	}

<<<<<<< HEAD
<<<<<<< HEAD
	info := bindataFileInfo{name: "bootstrap/digitalocean_k8s_centos_7_node.sh", size: 1769, mode: os.FileMode(420), modTime: time.Unix(1505275252, 0)}
=======
<<<<<<< HEAD
	info := bindataFileInfo{name: "bootstrap/digitalocean_k8s_centos_7_node.sh", size: 1620, mode: os.FileMode(436), modTime: time.Unix(1502639666, 0)}
=======
	info := bindataFileInfo{name: "bootstrap/digitalocean_k8s_centos_7_node.sh", size: 1620, mode: os.FileMode(420), modTime: time.Unix(1503343145, 0)}
>>>>>>> Working vnets
>>>>>>> Working vnets
=======
	info := bindataFileInfo{name: "bootstrap/digitalocean_k8s_centos_7_node.sh", size: 1620, mode: os.FileMode(420), modTime: time.Unix(1503941556, 0)}
>>>>>>> Go fmt
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _bootstrapDigitalocean_k8s_ubuntu_1604_masterSh = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xc4\x54\x4f\x6b\x24\xb7\x17\xbc\xeb\x53\x14\xf6\xc0\xfc\x0c\x2b\xc9\xde\x1f\x24\xb0\xb0\x81\xec\xc6\x07\xe7\xcf\xae\x31\x4e\x72\xc9\x45\x23\xbd\xe9\x96\x5b\x2d\xf5\x4a\x4f\xb6\x07\xdb\xf9\xec\x41\x3d\x3d\x8e\x7d\x09\x39\x04\x76\x2e\xd3\xaf\x54\xaa\x57\xa8\x9e\x74\x0c\xf9\x95\x7e\xe2\x18\xbf\x13\x4c\x26\xd0\xfd\x14\xbc\xf5\x1c\x76\x88\x89\x51\x8b\x8f\x1d\x0c\x98\xc6\x29\x18\x6e\x45\x30\xb1\xab\xa6\x23\x70\x82\x8f\x37\x64\x19\xdc\x13\x6e\x4d\xa8\x54\x60\x4a\xc3\x29\xda\x54\xf3\x4c\xea\x09\xb5\x50\x6e\x68\xf0\xa3\x9f\xc9\x3e\x8b\xe3\x86\x22\x6d\x5f\x29\xa7\xce\x5b\xf8\xd8\x28\x85\xb0\xf5\x81\x8a\xc2\x87\x1d\x1c\x15\xdf\x45\x98\x10\x96\x8e\xe4\x0e\xfd\x4a\x9f\x6a\x70\xd8\x10\xcc\x26\xcc\x9e\x36\x84\x42\x0c\xc3\xc8\x35\xb2\x1f\xe9\x8d\x38\x86\x89\x6e\xb6\x52\x7a\x0a\x01\xc5\x66\x3f\x31\x32\x99\x80\xbb\x94\x07\x85\x8b\x2d\x76\xa9\x22\x12\x39\xd8\x14\x9d\x67\x9f\xa2\x09\x7b\x4b\x6f\x70\x97\x3d\x13\x3c\x37\x73\x1b\x53\x7a\xa4\x8c\xd1\x0c\x04\x13\x13\xf7\x94\x5f\xe9\x2a\xf1\x15\x83\x14\xb6\xe6\x00\x59\xd0\x33\x4f\xe5\x9d\xd6\x93\xb1\x83\xe9\xa8\x28\x1b\x52\x75\xaa\x4b\xa9\x0b\xa4\x6c\x1a\xb5\x99\x58\xbb\x64\xdb\xbf\x1c\x68\xa7\xba\xa9\xc3\x23\x4a\x75\x09\x0b\x04\xe3\x1c\xa4\xe0\x54\x6d\x0f\x4d\x3c\x73\x75\x49\x35\x5b\x2a\x2a\xf8\xc2\xca\xe9\xa1\x6e\x28\x47\xe2\x05\x11\xa5\x87\xb4\x58\x93\xed\x13\x8e\x1c\x6d\x66\x27\xef\x74\xdb\xaa\x5e\x70\x7d\xd2\xf8\xbb\x94\xf7\x14\xbd\x09\x18\x8d\x8f\x47\xf8\xee\xdf\x36\x5b\x0b\xd1\xac\x76\xc4\xa8\x93\x33\x4c\x90\xbb\x67\xc4\xc7\xc2\x6d\x64\xe4\x0e\x7f\x08\x00\x28\xc9\x1a\x5e\xbe\x69\xc3\x6d\x60\xca\x52\xba\x64\x07\xca\xca\xa7\xa5\x6e\x1a\x9c\x4d\x2c\x53\xca\x2c\xe7\xb3\x5c\x56\x9a\x83\x40\xfc\xa2\x32\x6e\x7c\x7f\xa6\xbe\x55\xa7\xf2\xf4\x74\x81\xe7\xb3\x96\x95\x7d\x38\x6c\xbb\xf9\x22\x84\x28\xbb\xc2\x34\x5a\x0e\xa0\x38\x8f\xeb\xbe\xed\x0b\xbc\xb0\xc9\x7c\x80\xc5\xe5\xd5\xc5\x6f\xdf\x5f\x9f\x5f\x5c\xbe\x5f\xfd\xcf\x4f\x2d\x8d\x36\x69\xe9\x0e\x8e\x6e\xc1\x35\x9e\xe2\x11\xe6\x6e\xc0\x5a\xfb\x48\x0c\x8d\x87\x29\xfb\xc8\x58\xbd\x7d\x5a\xe3\x11\xb6\x32\xa4\x3b\xd2\x47\x90\xdb\xb3\x13\x31\x27\xb2\x7a\xd6\x6c\xa7\xcc\xe3\xa4\x95\x9f\xc4\xe5\xaf\x1f\x7e\xbe\xf8\x38\xf7\x99\xe7\xc7\x6f\x6d\x8a\x5b\xdf\xa9\x91\x4e\x84\xb8\xfe\xfc\xd3\xf9\xa7\xb6\x64\x78\x1f\xcc\x50\x37\xde\xa6\x1c\xb5\x0d\xb5\x30\x65\x75\x53\x52\xc4\x23\x6e\xbe\x40\x66\xac\xd5\xfe\x6e\x2a\xcf\x34\xfe\x62\x26\x75\xf1\xe9\xc7\xf3\x8f\xd7\xe7\x3f\xcc\x3a\xeb\x13\x71\xf9\xf9\xea\xfa\x3f\x90\x6b\x32\x78\x04\xa7\x58\xc7\x0d\xe5\xf5\x89\x10\x4b\x1c\xc8\x54\x88\x9f\x2b\x1f\x3d\x43\x4a\x33\xf9\x42\xf9\x96\xb2\xdc\xf8\xe8\x64\x4b\x16\xab\x87\xa6\xf2\x04\x29\x39\x0d\x14\xb1\x7a\x98\x4d\x3e\xe1\x15\xdf\xb8\x5b\xca\xec\x0b\xc9\x16\x01\x95\xd2\xf6\x2d\x47\xf6\xf4\x8a\x69\x29\xb3\xa4\x7b\xce\x46\x16\x13\x5f\xf3\x56\x0f\xcf\x67\xff\x24\xf6\x5e\x5b\xe4\x66\x9a\xc2\x7e\x42\xe5\xf6\x70\x57\x5c\xb2\x45\x4d\x39\xb5\xb7\xce\x9a\xe0\x6d\x52\x29\x77\xfa\xf6\xad\xfa\xbf\xee\x88\xdb\x6b\x29\xe7\x51\xa1\x97\x57\x42\x2f\x13\x6f\xda\xe3\xa5\xfb\x54\x0e\xcb\xc6\x8d\xfa\x4c\x7d\xa3\x17\xa9\x9d\x19\xc3\xbe\xa1\x9c\x4d\xcc\x51\x3f\x47\x71\x10\x33\x6e\xf4\x51\xb5\x45\x21\x8e\x71\x95\x12\x8b\x71\x70\x3e\x43\x4e\xf8\x53\xcf\x57\x59\xd8\xe9\x1f\xb6\x1d\x58\x7a\xdf\x40\x88\xbf\x02\x00\x00\xff\xff\x3b\xa6\x29\xea\xe0\x06\x00\x00")

func bootstrapDigitalocean_k8s_ubuntu_1604_masterShBytes() ([]byte, error) {
	return bindataRead(
		_bootstrapDigitalocean_k8s_ubuntu_1604_masterSh,
		"bootstrap/digitalocean_k8s_ubuntu_16.04_master.sh",
	)
}

func bootstrapDigitalocean_k8s_ubuntu_1604_masterSh() (*asset, error) {
	bytes, err := bootstrapDigitalocean_k8s_ubuntu_1604_masterShBytes()
	if err != nil {
		return nil, err
	}

<<<<<<< HEAD
<<<<<<< HEAD
	info := bindataFileInfo{name: "bootstrap/digitalocean_k8s_ubuntu_16.04_master.sh", size: 1760, mode: os.FileMode(420), modTime: time.Unix(1505275243, 0)}
=======
<<<<<<< HEAD
	info := bindataFileInfo{name: "bootstrap/digitalocean_k8s_ubuntu_16.04_master.sh", size: 1857, mode: os.FileMode(436), modTime: time.Unix(1502314777, 0)}
=======
	info := bindataFileInfo{name: "bootstrap/digitalocean_k8s_ubuntu_16.04_master.sh", size: 1857, mode: os.FileMode(420), modTime: time.Unix(1503343145, 0)}
>>>>>>> Working vnets
>>>>>>> Working vnets
=======
	info := bindataFileInfo{name: "bootstrap/digitalocean_k8s_ubuntu_16.04_master.sh", size: 1857, mode: os.FileMode(420), modTime: time.Unix(1503941556, 0)}
>>>>>>> Go fmt
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _bootstrapDigitalocean_k8s_ubuntu_1604_nodeSh = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xc4\x53\x4f\x4f\xfc\x36\x10\xbd\xe7\x53\x3c\xb1\x48\x5b\x24\xe2\xd0\x53\x25\x24\x2a\xf5\xcf\x1e\x68\x05\x95\x5a\xa4\x5e\x7a\x71\xec\x21\xf1\xc6\xf1\x04\xcf\xb8\xb0\x02\xbe\x7b\x95\x6c\x50\xa1\xbd\xfc\x0e\x3f\x89\x5c\x92\xf7\x66\xe6\xcd\x1b\x67\xbc\x41\xfd\x49\x4f\xb5\xc1\x9f\x04\x9b\x09\xf4\x34\xc5\xe0\x82\xc6\x03\x12\x2b\x8a\x84\xd4\xc1\x42\x69\x9c\xa2\xd5\x19\x44\x9b\xba\x62\x3b\x82\x32\x42\xda\x93\x53\x68\x4f\xf8\xdb\xc6\x42\x02\x2b\x33\x4f\xc9\x71\xc9\x4b\x52\x4f\x28\x42\x79\x66\x63\x18\xc3\x92\x1c\x72\xb5\x99\x59\xf0\xfd\x07\x65\xee\x82\x43\x48\x73\x8a\x10\xee\x43\x24\x31\xf8\xf1\x00\x4f\x12\xba\x04\x1b\xe3\xda\x91\xfc\x5b\x3f\xe9\xb9\x44\x8f\x96\x60\xdb\xb8\x78\x6a\x09\x42\x0a\xab\xc8\x25\x69\x18\xe9\xbc\xda\xc0\x26\xbf\x58\x91\x9e\x62\x84\xb8\x1c\x26\x45\x26\x1b\xf1\xc8\x79\x30\xb8\xbe\xc7\x81\x0b\x12\x91\x87\xe3\xe4\x83\x06\x4e\x36\x1e\x2d\x9d\xe3\x31\x07\x25\x04\x9d\xcd\xb5\x56\x7a\x70\xc6\x68\x07\x82\x4d\xac\x3d\xe5\x0f\xba\xa6\xfa\xc4\x1f\x59\x49\xf1\x0c\x57\x72\x44\x2d\xe8\x55\x27\xb9\x6c\x9a\xc9\xba\xc1\x76\x24\xc6\x45\x2e\xde\x74\xcc\x5d\x24\xe3\x78\x6c\xec\xa4\x8d\x67\x37\xbf\xeb\x81\x0e\xa6\x9b\x3a\xbc\x60\x11\x59\x29\x58\xef\x51\x1f\x75\x95\x8b\xeb\xd1\x90\x2e\x05\x8d\x70\xc9\x8e\xc4\xc4\x20\x6a\x7c\x33\x94\x96\x72\x22\x5d\x99\x63\x89\xf4\xa8\x1d\xb6\xe4\x7a\xc6\x89\xa7\x76\xf1\x74\xd9\xcc\xf5\xe6\x5d\x41\xe0\x06\xff\xc2\xfa\x89\x52\xb0\x11\xa3\x0d\xe9\x04\xdf\x7f\x69\xc7\xed\x3a\xfe\xec\xbc\x23\x45\x99\xbc\x55\x42\x7d\xf8\x48\x87\x24\x3a\xef\x52\x7d\xc0\x5f\x15\x00\x08\x3b\xab\xeb\x37\xb5\x3a\x6f\x92\xac\xd0\xb3\x1b\x28\x9b\xc0\x2b\x9e\x35\x34\xdb\x24\x13\x67\xad\x97\xf3\x5d\x23\xb3\x97\x48\xfa\x0e\x59\x3f\x5e\x7d\x6b\xbe\x33\x17\xf5\xc5\xc5\x4a\xef\x1f\x56\x8b\x72\x10\xa5\xd1\x69\x04\xa5\x65\x73\x8f\x8d\xfe\x1b\x14\xb5\x59\xdf\x62\xd5\xdd\x6f\xbf\xee\x6e\xaf\x4e\xbf\x99\xdd\x2e\x47\x32\x94\x36\x38\xce\xa9\x71\xb1\x88\x52\x36\x7b\xe1\x84\x17\xec\x1f\x50\x67\x6c\xcd\xf1\x92\x98\xa0\x34\xde\xd8\xc9\x5c\xdf\xfe\xb2\xfb\xe9\x6e\xf7\xf3\xa2\xb3\x3d\xab\x6e\x7e\xf8\xe3\x6e\xf7\xfb\x57\x10\x3c\x0a\x6d\xcf\xd6\xe1\xea\xdd\xdb\xfc\xc8\x24\xa4\xff\x63\xf7\x1c\x12\xea\x5a\x79\xa0\x84\xd3\xe7\xc5\xcf\x2b\x4e\x9f\x8f\x3a\xaf\xd5\x3f\x01\x00\x00\xff\xff\x66\xf8\x31\xb5\x0a\x05\x00\x00")

func bootstrapDigitalocean_k8s_ubuntu_1604_nodeShBytes() ([]byte, error) {
	return bindataRead(
		_bootstrapDigitalocean_k8s_ubuntu_1604_nodeSh,
		"bootstrap/digitalocean_k8s_ubuntu_16.04_node.sh",
	)
}

func bootstrapDigitalocean_k8s_ubuntu_1604_nodeSh() (*asset, error) {
	bytes, err := bootstrapDigitalocean_k8s_ubuntu_1604_nodeShBytes()
	if err != nil {
		return nil, err
	}

<<<<<<< HEAD
<<<<<<< HEAD
	info := bindataFileInfo{name: "bootstrap/digitalocean_k8s_ubuntu_16.04_node.sh", size: 1290, mode: os.FileMode(420), modTime: time.Unix(1505275243, 0)}
=======
<<<<<<< HEAD
	info := bindataFileInfo{name: "bootstrap/digitalocean_k8s_ubuntu_16.04_node.sh", size: 1247, mode: os.FileMode(436), modTime: time.Unix(1502314777, 0)}
=======
	info := bindataFileInfo{name: "bootstrap/digitalocean_k8s_ubuntu_16.04_node.sh", size: 1247, mode: os.FileMode(420), modTime: time.Unix(1503343145, 0)}
>>>>>>> Working vnets
>>>>>>> Working vnets
=======
	info := bindataFileInfo{name: "bootstrap/digitalocean_k8s_ubuntu_16.04_node.sh", size: 1247, mode: os.FileMode(420), modTime: time.Unix(1503941556, 0)}
>>>>>>> Go fmt
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _bootstrapGoogle_compute_k8s_ubuntu_1604_masterSh = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xc4\x55\x4b\x6f\x24\x35\x10\xbe\xfb\x57\x14\x33\x91\xf6\xb2\x6e\x67\x41\x80\x14\x29\x48\xec\x12\x20\x3c\x76\xa3\x28\xc0\x85\xc3\xd6\xd8\x35\xdd\x66\xdc\x76\xcb\x55\x9e\x64\x14\xc2\x6f\x47\x76\x77\x5e\xd2\x0a\x71\x4b\x2e\x9d\xfa\xea\x73\xd5\xe7\x7a\x78\xd6\x9f\x99\xc2\xd9\x6c\x7c\x34\x14\xf7\xb0\x41\x1e\x14\x93\x80\x26\x65\x1d\xfc\xa3\xd4\x1a\xf4\x0b\xfd\xa9\x35\x5c\x0d\xc4\x04\x7b\x0c\x85\x18\x30\x13\xf8\xf8\x17\x59\x21\x07\x3e\x4a\x02\x19\x08\xd8\x66\x3f\x49\x07\x7f\x50\x23\xd0\xcd\x14\xbc\xf5\x12\x0e\x10\x93\x40\x61\x1f\x7b\x40\x10\x1a\xa7\x80\x52\x8d\x80\xb1\x2f\xd8\x13\x48\x5a\xc2\xb5\x38\x73\x12\xb5\x06\xe4\xea\xa1\x68\x53\xc9\x8d\x36\x10\x14\xa6\x5c\xd1\xe0\x47\xdf\xe8\x3e\x57\x0c\xd2\xf6\x59\xe4\xd4\x7b\x0b\x3e\x56\x02\x13\x6c\x7d\x20\xee\xe0\xed\x01\x1c\xb1\xef\x23\x60\x08\x8f\x17\x58\x2e\xc5\x43\x2a\xc1\xa9\x35\x6c\x08\x70\x13\x9a\xaa\x0d\x41\x6d\x01\x0a\xe4\x12\xc5\x8f\xf4\x1a\x30\xba\xf9\xb6\x03\x85\xb0\xdc\x19\x32\x61\x80\xeb\x94\x77\x1d\x9c\x6f\xe1\x90\x0a\x44\x22\x07\x36\x45\xe7\xc5\xa7\x88\x61\x96\xf4\x1a\xae\xb3\x17\x02\x2f\x55\x5c\x6b\xf1\x1a\x52\x86\x11\x77\x04\x18\x93\x0c\x94\x9f\x45\xee\xd4\x5a\xad\xd5\xd5\x87\x9f\xcf\xde\x9f\xae\xce\xdf\xff\x74\xf6\xee\xea\xec\xbb\x66\xae\xd4\xc5\x87\xcb\xab\x47\xb0\x5a\xab\xc6\x7e\xc1\x39\x51\xb6\xe4\x00\x9a\x61\x10\x99\xf8\xc4\x98\x09\xed\x0e\x7b\xe2\xce\x86\x54\x5c\xd7\xa7\xd4\x07\xea\x6c\x1a\x0d\x4e\x62\x5c\xb2\xf5\xab\x77\x74\xe8\xfa\xa9\x87\xbf\x81\x8b\x4b\xb0\x40\x80\xce\x81\x56\x92\x8a\x1d\xc0\x90\x34\xae\xe1\x54\xb2\x25\xee\x82\x67\xe9\x9c\xd9\x95\x0d\xe5\x48\xb2\x20\x8a\x07\xd0\x16\x5e\x91\x1d\x12\xac\x1c\x6d\x9a\x92\x13\x53\x8f\x76\x4f\xb8\x3e\x19\x78\x34\xf5\x0d\x45\x8f\x01\x46\xf4\x71\x05\xdf\xfc\xdf\x64\xaf\x94\xaa\x52\x7b\x12\x28\x93\x43\x21\xd0\x87\x07\xc4\x47\x96\x3a\x66\xfa\x00\x7f\x2a\x00\x00\x4e\x16\x65\xf9\x9f\x36\x52\x47\x8c\x17\xd3\x25\xbb\xa3\xdc\xf9\xb4\xd8\x35\x86\x64\x8c\x3c\xa5\x2c\xba\xd5\x72\xf1\x54\x05\x81\xe4\x89\x85\x6e\x3c\x7d\xd3\x7d\xdd\x1d\xeb\xe3\xe3\x05\x6e\xb5\xd6\x45\x7c\x60\xa5\x14\x1f\x58\x68\xb4\x12\x80\x62\x9b\xeb\x39\xdb\x13\x9c\x05\xb3\xdc\xc3\xea\xe2\xf2\xfc\xf7\x6f\xaf\xce\xce\x2f\x4e\x3f\xce\xdd\xd4\x99\x24\x1f\xe0\x4b\xd0\xbc\xfd\x11\x56\xbf\x92\xa0\x43\x41\xfd\x7d\xc0\x7d\xca\x27\xf0\x43\x6b\xea\x0a\x56\x4b\xa9\xc7\x85\x60\x6c\x1a\xa7\x22\x74\x7f\xc0\xec\xdf\x98\x56\x95\x68\xc9\x44\x92\xba\x2f\xda\x47\xa1\xbc\x45\x4b\x6c\x8e\x8d\x9f\x56\x1f\x55\x6b\xdd\xd1\x83\x8a\xda\x0e\x19\x27\xd3\xf9\x49\x5d\xfc\xf6\xf6\x97\xf3\x77\x2f\xa1\x0c\xad\x25\x66\x6d\x53\xdc\xfa\xbe\x02\x74\x23\x94\x23\x06\xdd\x34\xab\xa5\x13\x90\x89\x49\x1e\x2c\x1f\xbd\x80\xd6\x38\x79\xa6\xbc\xa7\xac\x37\x3e\x3a\x5d\x9b\x0a\x47\xb7\x75\x61\xef\x40\x6b\x49\x3b\x8a\x70\x74\xdb\xb6\xfa\x0e\x9e\xf1\xd1\xed\x29\x8b\x67\xd2\xe8\x5c\x26\xe6\x7a\x6e\x29\xc2\xdd\x33\xa6\xa5\x2c\x9a\x6e\x24\xa3\x66\x8c\xcf\x79\x47\xb7\x0f\xd5\xbc\x53\xb3\xd6\xda\x76\x9c\xa6\x30\x0f\xa7\xde\xde\xaf\x89\x4b\x96\xbb\x29\xa7\xfa\x34\x5a\x0c\xde\xa6\x2e\xe5\xde\xec\x3f\xef\xbe\x30\x3d\x49\x7d\x5c\x75\x1b\x17\x7a\xba\x0d\x66\x19\x76\xac\x6f\x9d\x19\x12\xdf\xbb\xd1\x8d\xe6\x4d\xf7\x95\x59\x42\x1d\x70\x0c\x73\x42\xdd\x44\xb4\x6a\xce\xdb\xf6\x24\x18\xba\xd1\xc7\xae\x3a\xeb\x6f\xde\x65\x4a\xa2\xc6\x9d\xf3\x19\xf4\x04\x66\x48\x23\x99\xb2\x29\x51\x8a\x69\x0b\xad\xec\xf4\x1f\x11\x3e\x71\xc0\xcc\x69\x95\x1d\xd2\x75\x04\x7d\x09\xb3\xf3\x64\xfe\x7c\x2a\xc3\xbf\x01\x00\x00\xff\xff\xb8\x02\x30\xbc\x9a\x07\x00\x00")

func bootstrapGoogle_compute_k8s_ubuntu_1604_masterShBytes() ([]byte, error) {
	return bindataRead(
		_bootstrapGoogle_compute_k8s_ubuntu_1604_masterSh,
		"bootstrap/google_compute_k8s_ubuntu_16.04_master.sh",
	)
}

func bootstrapGoogle_compute_k8s_ubuntu_1604_masterSh() (*asset, error) {
	bytes, err := bootstrapGoogle_compute_k8s_ubuntu_1604_masterShBytes()
	if err != nil {
		return nil, err
	}

<<<<<<< HEAD
<<<<<<< HEAD
	info := bindataFileInfo{name: "bootstrap/google_compute_k8s_ubuntu_16.04_master.sh", size: 1946, mode: os.FileMode(420), modTime: time.Unix(1502937679, 0)}
=======
<<<<<<< HEAD
	info := bindataFileInfo{name: "bootstrap/google_compute_k8s_ubuntu_16.04_master.sh", size: 1946, mode: os.FileMode(436), modTime: time.Unix(1502993251, 0)}
=======
	info := bindataFileInfo{name: "bootstrap/google_compute_k8s_ubuntu_16.04_master.sh", size: 1946, mode: os.FileMode(420), modTime: time.Unix(1503343145, 0)}
>>>>>>> Working vnets
>>>>>>> Working vnets
=======
	info := bindataFileInfo{name: "bootstrap/google_compute_k8s_ubuntu_16.04_master.sh", size: 1946, mode: os.FileMode(420), modTime: time.Unix(1503941556, 0)}
>>>>>>> Go fmt
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _bootstrapGoogle_compute_k8s_ubuntu_1604_nodeSh = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xc4\x52\x4d\x4f\xdc\x4a\x10\xbc\xfb\x57\xd4\x5b\x23\x71\xc1\x36\xef\xf4\x24\x24\x9e\x94\x8f\x3d\x90\x28\x44\x4a\x56\xca\x25\x97\xf1\x4c\x63\x0f\x3b\x9e\xb6\xa6\x7b\x80\x15\x21\xbf\x3d\xf2\x07\x02\x92\x4b\x6e\xf8\x62\x57\x75\x77\x4d\xb5\xa7\xca\x7f\x9a\x2c\xa9\x69\x7d\x6c\x28\xde\xa0\x35\xd2\x17\x42\x8a\x8a\x0a\xeb\xf0\xb3\x28\x4a\x54\xaf\xf4\x14\x25\x76\x3d\x09\xe1\xc6\x84\x4c\x02\x93\x08\x3e\x5e\x93\x55\x72\xf0\x51\x19\xda\x13\xc4\x26\x3f\x6a\x8d\x6f\x34\x37\xd0\xdd\x18\xbc\xf5\x1a\x0e\x88\xac\xc8\xe2\x63\x07\x03\xa5\x61\x0c\x46\x27\x10\x4c\xec\xb2\xe9\x08\xca\xab\xdc\xac\xb3\x1c\x52\x94\x30\x32\x55\x28\x5a\xce\x69\x6e\xeb\x09\x59\x28\x4d\x6c\xf0\x83\x9f\xdb\x7d\x9a\x38\xf0\xd5\x0b\x65\xee\xbc\x85\x8f\x53\x83\x10\xae\x7c\x20\xa9\xf1\xf6\x00\x47\xe2\xbb\x08\x13\xc2\xd3\x02\xeb\x52\xd2\x73\x0e\xae\x28\xd1\x12\x4c\x1b\x66\x57\x2d\x61\xba\x02\xa3\x48\x39\xaa\x1f\xe8\x04\x26\xba\x65\xdb\x9e\x42\x58\x77\x46\x22\x13\x70\xcb\x69\x5f\xe3\xe2\x0a\x07\xce\x88\x44\x0e\x96\xa3\xf3\xea\x39\x9a\xb0\x58\x3a\xc1\x6d\xf2\x4a\xf0\x3a\x99\x9b\xaf\xb8\x04\x27\x0c\x66\x4f\x30\x91\xb5\xa7\xf4\x42\xb9\x2e\xca\xa2\x2c\x76\x9f\x3f\x6e\x2f\xcf\x37\x17\x97\x1f\xb6\xef\x76\xdb\xf7\x33\xdc\x14\x9f\xde\x7c\xdd\x6d\xbf\x3c\xd1\x0b\xde\xbc\x66\x4e\x0a\xc9\x8e\x61\x73\x0a\xa8\x04\xbd\xea\x28\x67\x4d\x33\x1a\xbb\x37\x1d\x49\x6d\x03\x67\x57\x77\xcc\x5d\xa0\xda\xf2\xd0\x98\x51\x1b\xc7\x76\x7a\x57\x7b\x3a\xd4\xdd\xd8\xe1\x07\x66\x91\x95\x82\x71\x0e\xd5\xa2\xab\x9c\x6d\x8f\x86\x74\x1e\x68\x84\x73\xb2\x24\x75\xf0\xa2\xb5\x6b\xf6\xb9\xa5\x14\x49\x57\x66\x19\x91\x1e\x95\xc5\x31\xd9\x9e\xb1\x71\xd4\xce\x9e\xce\x9a\x69\xbe\x7e\x36\xe0\xb9\xc1\x13\xac\xee\x28\x7a\x13\x30\x18\x1f\x37\xf8\xff\x6f\x4f\x3c\x5e\xd7\x9f\x9c\x77\xa4\xc8\xa3\x33\x4a\xa8\x0e\x2f\x69\x1f\x45\xa7\xfc\x55\x07\x7c\x2f\x00\x40\xd8\x1a\x5d\xbf\xa9\xd5\x29\x7b\xb2\x42\xc7\x76\x4f\xa9\xf6\xbc\xe2\x49\x43\x93\x89\x32\x72\xd2\x6a\xfe\xbf\x6b\x65\xf2\x12\x48\x9f\x21\xe3\x86\xf3\x7f\xeb\xff\xea\xd3\xea\xf4\x74\x75\x26\x07\x51\x1a\xac\x06\x50\x9c\x23\xbe\xe8\xff\x5e\x14\x35\x49\x1f\x6b\x4b\xb1\xda\x3e\x6a\x22\x91\x90\xfe\xc1\x5e\xb3\x8f\xa8\x2a\xe5\x3d\x45\x1c\xdd\xcf\x11\x7d\xc0\xd1\xfd\x12\xca\x87\xe2\x57\x00\x00\x00\xff\xff\x5d\x1a\x39\xc2\xde\x04\x00\x00")

func bootstrapGoogle_compute_k8s_ubuntu_1604_nodeShBytes() ([]byte, error) {
	return bindataRead(
		_bootstrapGoogle_compute_k8s_ubuntu_1604_nodeSh,
		"bootstrap/google_compute_k8s_ubuntu_16.04_node.sh",
	)
}

func bootstrapGoogle_compute_k8s_ubuntu_1604_nodeSh() (*asset, error) {
	bytes, err := bootstrapGoogle_compute_k8s_ubuntu_1604_nodeShBytes()
	if err != nil {
		return nil, err
	}

<<<<<<< HEAD
<<<<<<< HEAD
	info := bindataFileInfo{name: "bootstrap/google_compute_k8s_ubuntu_16.04_node.sh", size: 1246, mode: os.FileMode(420), modTime: time.Unix(1502937679, 0)}
=======
<<<<<<< HEAD
	info := bindataFileInfo{name: "bootstrap/google_compute_k8s_ubuntu_16.04_node.sh", size: 1246, mode: os.FileMode(436), modTime: time.Unix(1502993251, 0)}
=======
	info := bindataFileInfo{name: "bootstrap/google_compute_k8s_ubuntu_16.04_node.sh", size: 1246, mode: os.FileMode(420), modTime: time.Unix(1503343145, 0)}
>>>>>>> Working vnets
>>>>>>> Working vnets
=======
	info := bindataFileInfo{name: "bootstrap/google_compute_k8s_ubuntu_16.04_node.sh", size: 1246, mode: os.FileMode(420), modTime: time.Unix(1503941556, 0)}
>>>>>>> Go fmt
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _bootstrapInjectGo = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x64\x91\xd1\x6a\xdb\x30\x18\x85\xaf\xa3\xa7\x38\xe4\x2a\x01\xcf\x6e\x7b\x33\xe8\xd8\x85\xd7\x76\xcc\xb4\x24\x10\xa7\x2b\xa5\xf4\x42\x96\xff\xd8\x5a\x1d\x49\x93\x7e\xd7\x0d\xa5\x0f\xb4\xd7\xd8\x93\x0d\x25\xce\x58\x99\x6f\x0c\xfa\xcf\xf9\x74\xce\xaf\x2c\xc3\x85\x75\x3b\xaf\x9b\x96\xf1\xfb\x17\xce\x4e\x4e\x3f\x62\xdd\x12\xae\xfb\x4a\x2b\xeb\x0d\xf2\x9e\x5b\xeb\x83\xc8\x32\x91\x65\xb8\xd1\x8a\x4c\xa0\x1a\xbd\xa9\xc9\x83\x5b\x42\xee\xa4\x6a\xe9\x38\x49\xf0\x9d\x7c\xd0\xd6\xe0\x2c\x3d\xc1\x2c\x0a\xa6\xe3\x68\x3a\xff\x14\x11\x3b\xdb\x63\x2b\x77\x30\x96\xd1\x07\x02\xb7\x3a\x60\xa3\x3b\x02\xbd\x28\x72\x0c\x6d\xa0\xec\xd6\x75\x5a\x1a\x45\x18\x34\xb7\xfb\x7b\x46\x4a\x1a\x19\xf7\x23\xc3\x56\x2c\xb5\x81\x84\xb2\x6e\x07\xbb\xf9\x57\x08\xc9\x63\xe8\xf8\xb5\xcc\xee\x3c\xcb\x86\x61\x48\xe5\x3e\x70\x6a\x7d\x93\x75\x07\x69\xc8\x6e\x8a\x8b\xab\x45\x79\xf5\xe1\x2c\x3d\x19\x4d\xb7\xa6\xa3\x10\xe0\xe9\x67\xaf\x3d\xd5\xa8\x76\x90\xce\x75\x5a\xc9\xaa\x23\x74\x72\x80\xf5\x90\x8d\x27\xaa\xc1\x36\x86\x1e\xbc\x66\x6d\x9a\x04\xc1\x6e\x78\x90\x9e\x22\xa6\xd6\x81\xbd\xae\x7a\x7e\xb7\xb3\x63\x44\x1d\xde\x09\xac\x81\x34\x98\xe6\x25\x8a\x72\x8a\x2f\x79\x59\x94\x49\x84\xdc\x15\xeb\x6f\xcb\xdb\x35\xee\xf2\xd5\x2a\x5f\xac\x8b\xab\x12\xcb\x15\x2e\x96\x8b\xcb\x62\x5d\x2c\x17\x25\x96\x5f\x91\x2f\xee\x71\x5d\x2c\x2e\x13\x90\xe6\x96\x3c\xe8\xc5\xf9\xd8\xc0\x7a\xe8\xb8\x4d\xaa\xf7\xab\x2b\x89\xde\x45\xd8\xd8\x43\xa4\xe0\x48\xe9\x8d\x56\xe8\xa4\x69\x7a\xd9\x10\x1a\xfb\x4c\xde\x68\xd3\xc0\x91\xdf\xea\x10\x5f\x35\x40\x9a\x3a\x62\x3a\xbd\xd5\x2c\x79\x7f\xf4\x5f\xaf\x54\x08\x27\xd5\x53\x84\x54\xd6\x72\x60\x2f\x9d\x10\x7a\xeb\xac\x67\x4c\x63\x5f\xd3\x84\xa9\x10\x9b\xde\x28\x14\xe6\x07\x29\x9e\xd5\x92\x25\x1e\x1e\xab\x1d\x53\x82\x67\xd9\xf5\x14\xb0\x95\xee\xe1\xa0\x7e\x3c\xfc\xe6\x98\x1d\x25\xe4\xbd\xf5\x73\xbc\x8a\x49\x60\x7f\x19\xcd\xe7\x9f\x71\x50\xed\x59\x73\x31\x89\xd5\x9e\x12\x3c\xc7\x89\x97\xa6\xa1\x23\xf7\x55\x4c\xfe\xba\x8e\xa6\x90\xae\xc8\x75\x52\xd1\x6c\x9c\x24\x7b\x6f\x82\xd3\xb9\x98\xbc\x89\x89\x27\xee\xbd\x19\x13\x1e\x35\xf3\x04\x46\x77\xe2\x4d\xfc\x09\x00\x00\xff\xff\xbc\x34\x80\x62\x48\x03\x00\x00")

func bootstrapInjectGoBytes() ([]byte, error) {
	return bindataRead(
		_bootstrapInjectGo,
		"bootstrap/inject.go",
	)
}

func bootstrapInjectGo() (*asset, error) {
	bytes, err := bootstrapInjectGoBytes()
	if err != nil {
		return nil, err
	}

<<<<<<< HEAD
<<<<<<< HEAD
	info := bindataFileInfo{name: "bootstrap/inject.go", size: 840, mode: os.FileMode(420), modTime: time.Unix(1502322331, 0)}
=======
<<<<<<< HEAD
	info := bindataFileInfo{name: "bootstrap/inject.go", size: 840, mode: os.FileMode(436), modTime: time.Unix(1501967388, 0)}
=======
	info := bindataFileInfo{name: "bootstrap/inject.go", size: 840, mode: os.FileMode(420), modTime: time.Unix(1503343145, 0)}
>>>>>>> Working vnets
>>>>>>> Working vnets
=======
	info := bindataFileInfo{name: "bootstrap/inject.go", size: 840, mode: os.FileMode(420), modTime: time.Unix(1503941556, 0)}
>>>>>>> Go fmt
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _bootstrapVpnMeshbirdmasterSh = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x54\xce\x3d\x4b\xc4\x40\x10\xc6\xf1\x7e\x3e\xc5\xe3\xdd\x71\x68\x91\x4c\x65\x23\x68\x21\x1e\x28\x12\x11\x05\xc1\x4a\x92\xcd\xe8\xae\x6e\x76\xc3\xce\xc4\x17\x08\x7e\x76\x11\x14\x63\x39\xfc\x99\x1f\xcf\x7a\x8f\x27\x2d\xdc\x85\xc4\x92\x5e\xd1\xb5\xea\x49\xc5\x50\x09\xb9\x1e\x9f\x44\x6b\xdc\x5d\x5f\xa1\x11\xf5\xe4\xa6\x12\xe1\xcd\xc6\x23\xe6\x41\xd4\x77\xa1\xf4\xb5\xcb\x03\x87\xa4\xd6\xc6\x58\xab\xc7\x0c\xf5\xf4\x1b\x91\xe4\x0d\xdb\x13\xb0\x0d\x23\xc7\xfc\xf4\x22\x1f\xd4\xec\x6e\xcf\x4f\x2f\x6e\xce\x1e\x2e\x77\xf7\xc7\x9b\x7d\xd7\xda\x32\x63\x86\x9b\x0c\x55\x8f\x15\x56\xa8\x1e\x71\x78\x40\xe2\x7c\xc6\x66\xf9\x87\x1f\xb2\xfe\x06\xe5\x7d\xcc\xc5\xf0\xdf\x5d\x5e\x7f\x73\x9e\x73\x48\xd8\xd2\x57\x00\x00\x00\xff\xff\xda\xd3\x92\x18\xf4\x00\x00\x00")

func bootstrapVpnMeshbirdmasterShBytes() ([]byte, error) {
	return bindataRead(
		_bootstrapVpnMeshbirdmasterSh,
		"bootstrap/vpn/meshbirdMaster.sh",
	)
}

func bootstrapVpnMeshbirdmasterSh() (*asset, error) {
	bytes, err := bootstrapVpnMeshbirdmasterShBytes()
	if err != nil {
		return nil, err
	}

<<<<<<< HEAD
<<<<<<< HEAD
	info := bindataFileInfo{name: "bootstrap/vpn/meshbirdMaster.sh", size: 244, mode: os.FileMode(420), modTime: time.Unix(1502322331, 0)}
=======
<<<<<<< HEAD
	info := bindataFileInfo{name: "bootstrap/vpn/meshbirdMaster.sh", size: 244, mode: os.FileMode(436), modTime: time.Unix(1502293337, 0)}
=======
	info := bindataFileInfo{name: "bootstrap/vpn/meshbirdMaster.sh", size: 244, mode: os.FileMode(420), modTime: time.Unix(1503343145, 0)}
>>>>>>> Working vnets
>>>>>>> Working vnets
=======
	info := bindataFileInfo{name: "bootstrap/vpn/meshbirdMaster.sh", size: 244, mode: os.FileMode(420), modTime: time.Unix(1503941556, 0)}
>>>>>>> Go fmt
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _bootstrapVpnMeshbirdnodeSh = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xc4\x92\x41\x6f\xd4\x30\x10\x85\xef\xfe\x15\x8f\x06\x71\x6a\x93\x3b\x12\x97\xd2\x95\x58\xaa\x56\x08\x2a\x50\x4f\xc8\x71\x66\xe3\x69\x9d\x71\xe4\x19\xb7\x5d\x09\xf1\xdb\x51\xb2\x8b\x60\x7f\x41\x73\x9b\x97\xe7\xe7\xf7\x69\xdc\xbc\xe9\xaa\x96\xae\x67\xe9\x48\x9e\xd0\x7b\x8d\x4e\xc9\x70\x41\x2e\x0c\xf8\xed\x5c\x83\x8b\x57\xfa\x5c\x83\xbb\x48\x4a\x78\xf2\xa9\x92\xc2\x17\x02\xcb\x03\x05\xa3\x01\x2c\x96\x61\x91\xa0\xa1\xf0\x6c\x2d\x7e\xd0\x6a\xa0\x97\x39\x71\x60\x4b\x7b\x48\x36\x54\x65\x19\xe1\x61\x34\xcd\xc9\xdb\x32\x24\x2f\x63\xf5\x23\xc1\xf2\x31\x6e\xcd\x39\x5c\xe2\x1a\x78\x5d\xfe\x90\x84\x5c\xcb\x6a\x8b\x84\xaa\x54\x16\x35\xf1\xc4\xab\x9d\xcb\xa2\x21\xef\x4e\x92\xf3\xc8\x01\x2c\x8b\x41\x09\x3b\x4e\xa4\x2d\x2e\xf7\x18\x48\x79\x14\xf8\x94\xfe\x01\x1c\xa1\x34\xe6\x9a\x06\xd7\xa0\x27\xf8\x3e\xad\xad\x7a\xc2\xb2\x02\x6f\x28\x55\x8c\x27\x3a\x87\x97\xe1\x40\x1b\x29\xa5\x23\x33\x0a\xf9\x84\xe7\x5c\x1e\x5b\x6c\x77\xd8\xe7\x0a\x21\x1a\x10\xb2\x0c\x6c\x9c\xc5\xa7\x43\xa5\x73\x3c\x17\x36\x02\xdb\x52\x6e\x5d\x71\x83\x5c\x30\xf9\x47\x82\x97\x6c\x91\xca\x49\x72\xeb\x1a\xd7\xb8\x9b\xcd\xb7\x4f\x97\xdb\xaf\x57\x3f\xaf\x37\xf7\x1f\xce\xb6\xb7\x9f\x37\x1f\xef\x36\x57\x8b\x7a\xbd\xb9\x3f\x7b\xcd\x87\xe1\x1a\x7c\xff\x72\x8b\x1b\xd2\xe8\x42\x2d\x09\xd1\x6c\x7e\xdf\x75\x13\x69\xec\xb9\x0c\x6d\xc8\x53\xc7\xa2\xe6\x53\x6a\x35\xe2\x17\x34\x3a\x7a\x99\x73\x31\x9c\x50\xbd\xfd\x7f\x72\x7f\x8f\xe3\x21\xb3\xe0\x9d\xfb\x13\x00\x00\xff\xff\x85\xc7\x28\xe5\x1c\x03\x00\x00")

func bootstrapVpnMeshbirdnodeShBytes() ([]byte, error) {
	return bindataRead(
		_bootstrapVpnMeshbirdnodeSh,
		"bootstrap/vpn/meshbirdNode.sh",
	)
}

func bootstrapVpnMeshbirdnodeSh() (*asset, error) {
	bytes, err := bootstrapVpnMeshbirdnodeShBytes()
	if err != nil {
		return nil, err
	}

<<<<<<< HEAD
<<<<<<< HEAD
	info := bindataFileInfo{name: "bootstrap/vpn/meshbirdNode.sh", size: 796, mode: os.FileMode(420), modTime: time.Unix(1502322331, 0)}
=======
<<<<<<< HEAD
	info := bindataFileInfo{name: "bootstrap/vpn/meshbirdNode.sh", size: 796, mode: os.FileMode(436), modTime: time.Unix(1502293337, 0)}
=======
	info := bindataFileInfo{name: "bootstrap/vpn/meshbirdNode.sh", size: 796, mode: os.FileMode(420), modTime: time.Unix(1503343145, 0)}
>>>>>>> Working vnets
>>>>>>> Working vnets
=======
	info := bindataFileInfo{name: "bootstrap/vpn/meshbirdNode.sh", size: 796, mode: os.FileMode(420), modTime: time.Unix(1503941556, 0)}
>>>>>>> Go fmt
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _bootstrapVpnOpenvpnmasterCentosSh = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xc4\x57\x5f\x6f\xe3\x36\x12\x7f\xd7\xa7\x18\xc8\x01\xba\x6b\x54\x62\x9c\x4b\x7b\xed\x36\x0e\xea\x75\xdd\x9c\xb1\xdd\xd8\x48\xec\x3d\x2c\x60\x20\xa0\xa9\xb1\xc5\x5a\x22\x05\x92\x72\x22\x2c\xf6\x3e\xfb\x81\x94\xe4\xb5\x6c\x27\xb1\xdb\x87\xfa\xc5\xd2\xfc\xf9\xcd\x8f\xe4\xcc\x70\xd4\x82\xe0\x1f\xfa\x79\x2d\xf8\x2f\x02\x55\x08\xf8\x94\x25\x9c\x71\x93\x14\x20\xa4\x81\x5c\x73\xb1\x04\x0a\x06\xd3\x2c\xa1\xc6\xbe\x24\x54\x2c\x73\xba\x44\x30\x12\xb8\xf8\x13\x99\x01\x13\x23\xac\x69\x92\xa3\x06\xaa\xad\x1c\x05\x93\xb9\x72\x46\x31\x42\xae\x51\x59\x69\xc2\x53\xee\x8c\xb9\xf2\x5a\x56\x0a\x72\xd1\x40\x96\x4b\xce\x80\x0b\x6b\xa2\x11\x16\x3c\x41\x1d\xc2\xfb\x02\x22\xd4\x7c\x29\x80\x26\x49\x15\x11\xa3\x3a\x9e\x8e\x65\x9e\x44\x30\x47\xa0\xf3\xc4\x71\x9a\x23\x68\x34\x40\x0d\xa8\x5c\x18\x9e\xe2\xf7\x5e\x0b\xa8\x88\x1c\x15\x1d\x63\x92\x80\x66\x8a\x67\x06\x14\xd2\x04\x1e\xa5\x5a\x85\x30\x5c\x40\x21\x73\x10\x88\x11\x30\x29\x22\x6e\xb8\x14\x34\x29\x29\x7d\x0f\x8f\x8a\x1b\x04\x6e\x2c\xb9\x39\xd5\x31\x48\x05\x29\x5d\x21\x50\x21\x4d\x8c\xaa\x81\x1b\x7a\xff\xe0\x41\x8e\xc6\x83\xdb\x4f\xe3\xdb\x87\x0f\x83\xcf\xfd\xd1\xf4\x76\x72\xf7\xb9\xeb\x4f\xef\xfd\x6d\xf9\xf8\x6e\xf4\x69\x78\xdb\x1f\x74\xfd\x7e\xaf\xa1\xe8\x0f\x27\x9f\xbb\xfe\x3d\x15\xbf\x2b\x2a\x18\xd7\x4c\x36\xd4\xa3\xbb\x9b\xae\xff\x21\x9f\x73\x26\x95\x68\x68\x06\x1f\x7b\xc3\x3f\xba\xbe\x92\xd2\xfc\x9a\x48\x46\x93\x58\x6a\xd3\xf4\x9d\x3e\xe3\x7a\xdb\xfb\x38\xe8\xfa\x1a\xd5\x1a\x95\xef\x79\xe3\xbb\xe1\xa7\xde\x64\xf0\x30\x1c\x77\xcf\xde\xb0\x5c\x25\x10\x1b\x93\xbd\x23\xa4\xf3\xe3\xcf\xe1\xc5\x0f\x97\x61\xf5\x4f\x52\x34\x34\xa2\x86\x92\x75\x87\x70\x61\x50\x2d\x28\x43\x4d\x32\xc5\xd7\xd4\x20\x39\x27\x3c\x5b\x5f\x12\x1a\x45\x0a\xb5\x7e\xeb\x79\x2d\x18\x65\x28\x3e\x8d\x6f\xbd\x22\x4f\x81\x0b\x6d\x6c\x36\x61\x86\x49\xa0\x30\x41\xaa\x11\x82\xa2\xa1\x93\x19\x8a\x75\x26\x00\xa9\x2e\x02\xa5\xa9\xd5\x7b\xe9\x2a\xe2\x0a\xfe\x47\x2a\x65\xc0\xa8\xc7\x32\x08\xd4\x02\x48\xae\x15\xd1\x31\x55\x48\x6a\x0f\x72\x11\x9e\x93\x76\xc3\x9a\x78\x9e\xc6\x08\x02\x0e\x01\x82\xaf\x09\x3e\x65\x52\x19\xf8\x30\xf8\xfc\x50\x1d\x57\xd8\x3e\x20\xec\xce\xfc\xb3\x2f\xfb\x47\xfb\x75\xe6\x13\xbf\x89\xbf\xa6\x4a\x3f\x1b\xa2\x3e\xf9\x66\x8c\x4d\x3e\xec\x04\xa9\xe5\xa7\x46\xb1\x69\xb4\xb3\x0a\x9b\x58\xbb\x4b\x18\x4e\x4e\xe6\x3f\xba\xbb\x69\x02\xdb\x94\xdc\xc1\x1d\xdd\xdd\x9c\x0a\xeb\xd2\xb7\x09\x5c\x66\xf4\x0e\xb4\x13\x9e\xcc\x79\xba\x43\x79\xba\xc7\x78\x7a\x2a\xa6\x2d\x9a\x26\xaa\x2b\xa3\x1d\x5c\x2b\x7b\x0e\xd9\x6b\xb5\xe0\x06\x05\x2a\x6a\x6c\xbb\xb4\xd5\x07\x0c\x95\xe1\x0b\xce\xa8\x41\xed\xb1\xa8\x99\xe5\x5a\xe6\x8a\xd9\x2e\xaf\xb4\x17\x12\x96\x20\x15\x01\x4d\x12\x2f\x24\xf3\x9c\x27\x51\xc0\x28\x04\xc1\x9c\x1a\x16\x6f\x44\x2b\x2c\x82\x0a\xba\x52\xc1\x3e\xbf\x8d\x75\x14\x7b\x75\xc5\x05\xc1\x12\xc5\x0a\x0b\x08\x02\x8d\x4c\xa1\x81\x15\x16\x9a\x18\x1a\xae\xb0\x68\x52\x67\x09\x47\x61\x9a\xd4\xb7\xe2\x6f\x02\x97\x76\x3b\xeb\xae\x3a\x82\x6d\xf8\x0b\xbe\xcc\x15\xb5\x4d\xdf\xd6\x73\x63\xbf\x5c\x6c\x46\x43\xa6\xcc\x61\x85\x8d\xb3\xaf\xd8\x5f\xaa\x43\x98\x79\x00\x70\x9c\xf9\x61\x5c\xf3\x5c\xc0\x28\xbe\x38\xbf\xfc\x29\xcc\x30\x05\x82\x86\xd5\x7a\xbb\x9e\xad\xde\x14\xc9\x8d\x26\xb8\x08\x2f\xc3\x7f\x11\x4d\xd3\x2c\xc1\xea\x2f\x28\xf7\x22\x70\x77\x2f\x29\x4f\x2f\xb4\xb2\x06\xe6\xc1\xc5\x49\xb1\xb0\xdb\xdb\x82\x5e\xf4\x67\xae\x0d\x4c\xfe\xb8\xdf\xd9\xd9\x46\x3a\xcf\x7e\x31\x89\x0e\x68\x6e\x62\xa8\x96\x74\x1e\xb6\xc9\x9e\x8c\xf8\xc7\x45\xde\xc2\x3e\x00\x42\x6d\x06\x05\x11\x57\xc8\x2c\x13\x38\x3f\x12\xd5\xad\x67\x20\xdc\x68\xd1\x1b\xdc\x07\x9d\x8b\x9f\x82\xfe\xfb\x3e\xb0\x98\x67\xb8\x5b\xa0\xb3\x5f\x18\xcf\xec\x30\xb0\x65\x19\xb6\xc9\xbe\xf0\xaf\xac\xe9\x00\x0a\x05\xb7\xc8\xfb\xff\xf4\x2e\x7e\xf8\xf1\x94\x05\xdd\xa3\x29\x67\x32\x3b\x15\x2d\x95\xcc\xb3\xdd\x85\x38\xad\x90\x73\x19\x15\x61\x9b\x6c\xbd\xfd\x05\xea\x16\xcf\x05\x01\x21\xdd\x7f\xd8\x26\x8d\xf7\x63\x31\x1d\xf7\xc9\xe8\xb7\xd1\x9b\xa7\x34\x8f\x14\xe7\x6f\xdf\xc1\x82\x8b\x08\x1e\x69\x61\x07\xbf\x65\x5d\xd7\x02\x1f\x5d\x47\x80\x85\x54\x80\x6b\x54\x45\x55\xff\xdb\xc7\x19\xe5\x76\xd0\x75\x3d\x64\xbb\x79\xec\x10\xdf\x58\x05\x4c\x84\x6d\xb2\xfd\x7a\x02\xed\x3a\xe6\x70\x6c\x29\x3d\x52\x15\x71\xb1\xdc\x09\xd5\x12\x68\x42\x3b\xb4\x84\x3c\x7b\xa8\xac\xc2\x36\x39\x20\xed\x76\xea\xd0\xba\xd0\xcc\x24\xd5\x8e\xbb\x67\x08\x32\xcf\x3e\x1a\x4c\xed\x9b\x36\x54\x99\x7a\x92\xf9\xf5\x40\xf7\xfd\x66\x8a\x25\xc5\x17\x6c\x0f\x36\xde\x46\x81\xbb\xfd\xed\x2b\xb4\x06\x76\xda\x2e\x0b\x4e\xaa\x02\xb4\x51\x39\x33\xb9\x42\x97\x73\x1a\x99\x7d\xe4\xa6\x9a\xa7\x02\xdb\x72\x4b\xc4\xaa\x01\x69\xe2\x3a\x90\xc7\xe2\x54\x46\xf0\xef\xf3\xf3\xe7\x0c\x5c\xc8\x6f\xac\x9c\x0e\x16\x4a\xa6\x80\x4f\xae\xa3\xe9\xbf\xd3\x00\xcb\x90\x65\x03\xdc\x23\x30\xa7\x1a\x1b\x6d\x2f\x02\x85\xa9\x34\xee\x9c\xab\xc9\xb3\x79\xc8\x95\x3a\xad\xef\xc5\xa0\x03\x9d\xce\xcf\x97\xb5\xfc\xec\xcb\xb7\xf1\xf7\x6b\xa9\xf1\x5f\x0d\x6b\x8b\xb9\xac\xcd\x77\x55\x3d\xd9\x5a\x50\xb9\xd8\x0c\xbc\x27\xd4\xf6\x0b\xc1\x4e\xac\xe8\xd7\x68\x7f\xb4\x5f\x4f\xdc\x54\x1f\x99\x08\x11\x2e\x68\x9e\x34\x6e\xf2\x66\x48\x46\xa1\xbc\x84\xc9\xac\xf5\xed\xf9\x78\xca\xae\x21\xd4\xe7\x59\xa2\xec\x48\x8e\xc7\xb2\x97\x4a\xe5\xb8\xc2\x82\xcc\x5a\x3b\x82\xd7\x97\xdf\xaf\xea\x06\x5f\xb9\x4a\x9e\x9e\xbb\x40\x8e\xa3\x7a\xc4\xb5\x71\x44\x5a\xd7\x1f\xc3\x1a\x8d\xfd\x4e\xd7\x1e\xb2\x58\x82\xdf\xbc\x52\x3b\x3e\x5c\x5f\xbf\x84\x56\x3a\x95\x9f\xc8\x81\xeb\x00\xdc\x14\x70\xf1\x9a\x5b\xa3\xeb\xd8\x41\xc7\xb3\xf3\xee\x6f\xc3\xbb\xee\xde\x08\xe4\x8d\xa6\x93\xf1\x74\xe2\x94\xc4\xa4\x99\xf7\xbe\x77\x3f\x78\xe8\x8f\x6e\x7f\x1f\xde\x74\x5f\x0a\xc1\xa8\x81\xb3\x2f\x5b\xd6\x5f\xab\x39\xed\xea\x8d\x63\x1d\x20\x7c\x77\xc5\xe8\xf5\x77\x6f\x2b\xf9\xd9\x97\x8a\xc4\xd7\x7a\x32\xdc\xb7\x27\x8c\x5e\xcf\xc4\x95\xcd\xb2\xc3\x8e\xe5\x48\xfa\xac\xb7\xf5\x9b\x89\xab\x15\x16\x2f\xba\xdb\xd4\x3b\xe0\x6e\xdd\x66\xe2\xaa\x1e\x85\x0e\x42\x54\xe3\xd1\x01\xef\x7d\xb7\x6b\x3b\xbb\x6f\xb6\x77\x8b\xbd\xdb\x40\xcf\xfb\x7f\x00\x00\x00\xff\xff\x30\x80\x23\x1b\xbc\x12\x00\x00")

func bootstrapVpnOpenvpnmasterCentosShBytes() ([]byte, error) {
	return bindataRead(
		_bootstrapVpnOpenvpnmasterCentosSh,
		"bootstrap/vpn/openvpnMaster-centos.sh",
	)
}

func bootstrapVpnOpenvpnmasterCentosSh() (*asset, error) {
	bytes, err := bootstrapVpnOpenvpnmasterCentosShBytes()
	if err != nil {
		return nil, err
	}

<<<<<<< HEAD
<<<<<<< HEAD
	info := bindataFileInfo{name: "bootstrap/vpn/openvpnMaster-centos.sh", size: 4796, mode: os.FileMode(420), modTime: time.Unix(1505275252, 0)}
=======
<<<<<<< HEAD
	info := bindataFileInfo{name: "bootstrap/vpn/openvpnMaster-centos.sh", size: 4873, mode: os.FileMode(436), modTime: time.Unix(1502639666, 0)}
=======
	info := bindataFileInfo{name: "bootstrap/vpn/openvpnMaster-centos.sh", size: 4873, mode: os.FileMode(420), modTime: time.Unix(1503343145, 0)}
>>>>>>> Working vnets
>>>>>>> Working vnets
=======
	info := bindataFileInfo{name: "bootstrap/vpn/openvpnMaster-centos.sh", size: 4873, mode: os.FileMode(420), modTime: time.Unix(1503941556, 0)}
>>>>>>> Go fmt
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _bootstrapVpnOpenvpnmasterSh = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xc4\x57\x51\x6f\xe3\x36\x12\x7e\xd7\xaf\x18\xc8\x01\xba\x1b\x54\x62\x1c\xa4\xbd\x76\x1b\x07\xf5\xba\x6e\xce\xd8\x6e\x6c\x24\x76\x0e\x01\x0c\x04\x34\x35\xb6\x58\xcb\xa4\x40\x52\x4e\xd4\x5c\xee\xb7\x1f\x48\x49\x8e\x65\x3b\x89\xbd\x7d\x68\x5e\x1c\x0d\x67\xbe\xf9\x86\x9c\x19\x0e\x1b\x10\xfc\x43\x7f\x5e\x03\xfe\x83\x40\x15\x02\x3e\xa6\x09\x67\xdc\x24\x39\x08\x69\x20\xd3\x5c\xcc\x80\x82\xc1\x45\x9a\x50\x63\x3f\x12\x2a\x66\x19\x9d\x21\x18\x09\x5c\xfc\x89\xcc\x80\x89\x11\x96\x34\xc9\x50\x03\xd5\x56\x8e\x82\xc9\x4c\x39\xa5\x18\x21\xd3\xa8\xac\x34\xe1\x0b\xee\x94\xb9\xf2\x1a\x56\x0a\x72\x5a\x43\x96\x33\xce\x80\x0b\xab\xa2\x11\xa6\x3c\x41\x1d\xc2\xe7\x1c\x22\xd4\x7c\x26\x80\x26\x49\xe9\x11\xa3\xca\x9f\x8e\x65\x96\x44\x30\x41\xa0\x93\xc4\x71\x9a\x20\x68\x34\x40\x0d\xa8\x4c\x18\xbe\xc0\xef\xbd\x06\x50\x11\x39\x2a\x3a\xc6\x24\x01\xcd\x14\x4f\x0d\x28\xa4\x09\x3c\x48\x35\x0f\xa1\x37\x85\x5c\x66\x20\x10\x23\x60\x52\x44\xdc\x70\x29\x68\x52\x50\xfa\x1e\x1e\x14\x37\x08\xdc\x58\x72\x13\xaa\x63\x90\x0a\x16\x74\x8e\x40\x85\x34\x31\xaa\x1a\x6e\xe8\xfd\x83\x07\xd9\x1f\x74\xaf\x6e\x07\x57\xf7\x5f\xba\x77\x9d\xfe\xe8\x6a\x78\x7d\xd7\xf2\x47\x37\xfe\xba\x7c\x70\xdd\xbf\xed\x5d\x75\xba\x2d\xbf\xd3\xae\x2d\x74\x7a\xc3\xbb\x96\x7f\x43\xc5\xef\x8a\x0a\xc6\x35\x93\xb5\xe5\xfe\xf5\x65\xcb\xff\x92\x4d\x38\x93\x4a\xd4\x56\xba\x5f\xdb\xbd\x3f\x5a\xbe\x92\xd2\xfc\x9a\x48\x46\x93\x58\x6a\x53\xb7\x1d\xbd\x62\x7a\xd5\xfe\xda\x6d\xf9\x1a\xd5\x12\x95\xef\x79\x83\xeb\xde\x6d\x7b\xd8\xbd\xef\x0d\x5a\x47\x1f\x58\xa6\x12\x88\x8d\x49\x3f\x11\xd2\xfc\xf1\xe7\xf0\xf4\x87\xb3\xb0\xfc\x25\x0b\x34\x34\xa2\x86\x92\x65\x93\x70\x61\x50\x4d\x29\x43\x4d\x52\xc5\x97\xd4\x20\x39\x21\x3c\x5d\x9e\x11\x1a\x45\x0a\xb5\xfe\xe8\x79\x0d\xe8\xa7\x28\x6e\x07\x57\x9e\x47\x53\x13\xcc\xd0\x40\x96\x46\xd4\xe0\xea\x93\x0b\x6d\x6c\x86\x05\x39\xc8\x14\xc5\x32\x15\x80\x54\xe7\x81\xd2\xd4\xf3\xec\x61\x07\x8c\x46\x5c\xc1\xff\x48\xb9\x1c\x30\xea\x79\x1a\x23\x08\x38\x04\x08\xbe\x26\xf8\x98\x4a\x65\xe0\x4b\xf7\xee\xbe\xdc\xfc\xf0\x78\x87\xb0\x35\xf6\x8f\x9e\xb6\x0f\xea\x79\xec\x13\xbf\x06\x4f\x96\x54\xe9\x57\x5d\x54\xe7\x58\xf7\xb1\x3a\xdd\x0d\x27\x95\xfc\x50\x2f\x36\x29\x36\xa2\xb0\x69\xb2\x19\x42\x6f\x78\x30\xff\xfe\xf5\x65\x1d\xd8\x26\xd8\x06\x6e\xff\xfa\xf2\x50\x58\x97\x8c\x75\xe0\x22\x3f\x37\xa0\x9d\xf0\x60\xce\xa3\x0d\xca\xa3\x2d\xc6\xa3\x43\x31\x6d\x09\xd4\x51\x5d\x51\x6c\xe0\x5a\xd9\x6b\xc8\x5e\xa3\x01\x97\x28\x50\x51\x63\x9b\x9f\xad\x25\x60\xa8\x0c\x9f\x72\x46\x0d\x6a\x8f\x45\xf5\xb4\xd5\x32\x53\xcc\xf6\x6c\xa5\xbd\x90\xb0\x04\xa9\x08\x68\x92\x78\x21\x99\x64\x3c\x89\x02\x46\x21\x08\x26\xd4\xb0\x78\x25\x9a\x63\x1e\x94\xd0\xe5\x12\x6c\xf3\x5b\x69\x47\xb1\x57\x15\x51\x10\xcc\x50\xcc\x31\x87\x20\xd0\xc8\x14\x1a\x98\x63\xae\x89\xa1\xe1\x1c\xf3\x3a\x75\x96\x70\x14\xa6\x4e\x7d\xcd\xff\xca\x71\xa1\xb7\x11\x77\x59\xdf\xb6\x7d\x4f\xf9\x2c\x53\xd4\xb6\x70\x8f\xa5\xf5\xfd\x72\xbe\x19\x0d\x99\x32\xbb\x17\xac\x9f\xed\x85\xed\x50\x1d\xc2\xd8\x03\x80\xfd\xd4\x77\xe3\x9a\xd7\x1c\x46\xf1\xe9\xc9\xd9\x4f\x61\x8a\x0b\x20\x68\x58\xb5\xee\xcd\x32\xf1\x17\x4f\x21\x60\x40\x32\xad\x88\x8e\xa9\x42\x12\xc9\x95\x02\xc1\x47\xba\x48\x13\xd4\x44\xbb\xdf\xa0\xd8\x8e\xc0\x5d\xa6\xa4\x38\xc0\xd0\xca\xc2\xd9\x5f\xf0\x5f\x30\x88\x35\xfc\x9d\x81\x4a\x31\xb5\x5b\xdd\x80\x76\xf4\x67\xa6\x0d\x0c\xff\xb8\xd9\xd8\xe5\x5a\x6a\x8f\x7f\x31\x89\x0e\x68\x66\x62\x28\xc3\x3b\x09\x8f\xc9\x96\x8c\xf8\xfb\x79\x5e\xc3\xde\x01\x42\x6d\x36\x05\x11\x57\xc8\x2c\x13\x38\xd9\x13\xd5\xc5\xd3\x15\x6e\x68\x68\x77\x6f\x82\xe6\xe9\x4f\x41\xe7\x73\x07\x58\xcc\x53\xdc\x2c\xd6\xf1\x2f\x8c\xa7\xf6\x9a\x5f\xd3\x0c\x8f\xc9\xb6\xf0\x5b\x62\xda\x81\x42\xc1\x05\x79\xf3\xef\xf6\xe9\x0f\x3f\x1e\x12\xd0\x8d\xbd\xd6\xec\xb4\x65\xe7\x9d\x99\x92\x59\xba\x19\x88\x5b\x15\x72\x22\xa3\x3c\x3c\x26\x6b\x5f\xdf\x40\xdd\xe2\x39\x27\x20\xa4\xfb\x0d\x8f\x49\xed\x7b\x5f\x4c\xc7\x7d\xd8\xff\xad\xff\xe1\x71\x91\x45\x8a\xf3\x8f\x9f\x60\xca\x45\x04\x0f\x34\xb7\x23\xdd\xac\xaa\x71\x81\x0f\xae\x3b\xc0\x54\x2a\xc0\x25\xaa\xbc\xec\x05\xeb\xc7\x19\x65\x76\x84\x75\xfd\x64\xbd\x91\x6c\x10\x5f\x69\x05\x4c\x84\xc7\x64\xfd\xf3\x00\xda\x95\xcf\xde\xc0\x52\x7a\xa0\x2a\xe2\x62\xb6\xe1\xaa\x21\xd0\x84\x76\x1c\x09\x79\x7a\x5f\x6a\x85\xc7\x64\x87\xb4\xd5\xac\x5c\xeb\x5c\x33\x93\x94\x6e\x74\xae\x0d\x2e\x98\x49\x40\x1b\xaa\x4c\x35\x9e\xfc\xba\xa3\xff\xbe\xa8\x62\x41\xec\x0d\xdd\x9d\xad\xb7\x56\xd6\x6e\x57\x3b\x0a\xad\x82\x9d\x9e\x8b\x32\x93\x2a\x07\x6d\x54\xc6\x4c\xa6\xd0\x65\x9a\x46\x66\xff\xe5\xc6\x5b\xcc\xed\x88\x14\xd8\xa6\x5b\x20\x96\xfd\x47\x13\xd7\x80\x3c\x16\x2f\x64\x04\xff\x3a\x39\x79\x4d\xc1\xb9\x7c\x61\xe5\xd6\x60\xaa\xe4\x02\xaa\xc6\x66\x5b\xfa\xb7\xf4\xbe\xc2\x9d\xdb\xd2\x6d\xe7\x13\xaa\xb1\xd6\xe8\x22\x50\xb8\x90\xc6\x9d\x6c\x39\x45\xd6\x8f\xb5\x5c\x5e\x54\xb7\x62\xd0\x84\x66\xf3\xe7\xb3\x4a\x7e\xf4\xf4\x32\xca\x3e\x17\x2b\xfe\xbb\x6e\x6d\xf9\x16\xd5\xf8\xa9\xac\x20\x9b\xfd\x2a\x13\xab\xe1\xf5\x80\x6a\x7e\xc3\xd9\x81\x35\xfc\x1e\xed\xaf\xf6\x25\xc4\x4d\xf9\x60\x44\x88\x70\x4a\xb3\xa4\x76\x8f\xd7\x5d\x32\x0a\xc5\x15\x4c\xc6\x8d\x97\xff\xf7\xa7\xec\x5a\x40\x75\x9e\x05\xca\x86\x64\x7f\x2c\x7b\x8d\x94\x86\x73\xcc\xc9\xb8\xb1\x21\x78\x3f\xfc\x4e\x59\x33\xf8\xce\xe5\xf1\xf8\xda\x95\xb1\x1f\xd5\x3d\x2e\x8a\x3d\xd2\xba\x7a\xd8\x6a\x34\xf6\xcd\xad\x3d\x64\xb1\x04\xbf\x7e\x89\x36\x7d\xb8\xb8\x78\x0b\xad\x30\x2a\x9e\xbb\x81\xab\x7e\x6e\x72\x38\xdd\xcf\x2c\x4b\xeb\xed\xb5\x78\x87\x05\x0a\xb5\x4c\x96\xce\x6a\x3f\x9c\x48\x3e\x88\xbf\x8b\x54\xeb\x81\x76\xf0\xf2\xec\xfc\xfd\x5b\xef\xba\xb5\x35\x92\x79\xfd\xd1\x70\x30\x1a\xba\x45\x62\x16\xa9\xf7\xb9\x7d\xd3\xbd\xef\xf4\xaf\x7e\xef\x5d\xb6\xde\x72\xc1\xa8\x81\xa3\xa7\x35\xed\xe7\x72\x6e\x3c\xff\xe0\x02\x09\x10\xbe\x3b\x67\xf4\xe2\xbb\x8f\xa5\xfc\xe8\xa9\x24\xf1\x5c\x4d\xaa\xdb\xfa\x84\xd1\x8b\xb1\x38\xb7\x79\xbf\xdb\xb0\x18\x91\x5f\xb5\xb6\x76\x63\x71\x3e\xc7\xfc\x4d\x73\x5b\x0c\x3b\xcc\xad\xd9\x58\x9c\x57\xe3\xd8\x4e\x88\x72\x44\xdb\x61\xbd\x6d\x76\x61\xdf\x12\xab\xed\x5d\x63\xef\x36\xf0\xff\x01\x00\x00\xff\xff\xc8\xf5\x61\xe2\x18\x13\x00\x00")

func bootstrapVpnOpenvpnmasterShBytes() ([]byte, error) {
	return bindataRead(
		_bootstrapVpnOpenvpnmasterSh,
		"bootstrap/vpn/openvpnMaster.sh",
	)
}

func bootstrapVpnOpenvpnmasterSh() (*asset, error) {
	bytes, err := bootstrapVpnOpenvpnmasterShBytes()
	if err != nil {
		return nil, err
	}

<<<<<<< HEAD
<<<<<<< HEAD
	info := bindataFileInfo{name: "bootstrap/vpn/openvpnMaster.sh", size: 4888, mode: os.FileMode(420), modTime: time.Unix(1505275243, 0)}
=======
<<<<<<< HEAD
	info := bindataFileInfo{name: "bootstrap/vpn/openvpnMaster.sh", size: 4970, mode: os.FileMode(436), modTime: time.Unix(1502314777, 0)}
=======
	info := bindataFileInfo{name: "bootstrap/vpn/openvpnMaster.sh", size: 4970, mode: os.FileMode(420), modTime: time.Unix(1503343145, 0)}
>>>>>>> Working vnets
>>>>>>> Working vnets
=======
	info := bindataFileInfo{name: "bootstrap/vpn/openvpnMaster.sh", size: 4970, mode: os.FileMode(420), modTime: time.Unix(1503941556, 0)}
>>>>>>> Go fmt
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _bootstrapVpnOpenvpnnodeCentosSh = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xc4\x92\xe1\x6a\x13\x41\x14\x85\xff\xcf\x53\x1c\x48\xa1\x16\x9a\x1d\x2b\x55\x50\x50\xd4\x1a\x21\x82\x69\x90\x52\x7f\x96\x9b\xd9\x9b\xec\x6d\x67\x67\xd6\x99\x3b\xa9\x8b\xfa\xee\xb2\x9b\x14\x9a\xbe\x40\xf7\xcf\x32\xe7\x9e\x39\xf7\x83\x33\x13\x4c\x9f\xe9\x33\x13\xfc\x64\x50\x62\xf0\xef\xce\x8b\x13\xf5\x3d\x42\x54\x94\x2c\x61\x03\x82\x72\xdb\x79\xd2\xe1\xe0\x29\x6c\x0a\x6d\x18\x1a\x21\xe1\x96\x9d\x42\x1b\xc6\x96\x7c\xe1\x0c\xca\x83\xce\xc1\xc5\x92\x46\x53\xc3\x28\x99\xd3\xa0\x7a\x69\x65\x34\x4b\x32\x93\x41\x45\x5c\x1f\x24\xc7\x8d\x38\x48\x18\x2c\x99\xb1\x16\xcf\xb9\xc2\xe7\x1e\x35\x67\xd9\x04\x90\xf7\xfb\x8d\x5c\x3f\xec\xcb\x4d\x2c\xbe\xc6\x8a\x41\x2b\x3f\x32\xad\x18\x99\x15\xa4\x48\x25\xa8\xb4\x7c\x6a\x26\xa0\x50\x8f\x28\xb9\x61\xef\x91\x5d\x92\x4e\x91\x98\x3c\xee\x63\xba\xab\x30\x5f\xa3\x8f\x05\x81\xb9\x86\x8b\xa1\x16\x95\x18\xc8\xef\x90\x4e\x71\x9f\x44\x19\xa2\x03\xdc\x8a\x72\x83\x98\xd0\xd2\x1d\x83\x42\xd4\x86\xd3\x41\x6e\x65\x9e\xb1\x48\xb3\xfc\x31\xbf\xfe\x74\x35\xbb\x99\x2f\xdf\x1f\xbd\x70\x25\x79\x34\xaa\xdd\x3b\x6b\xcf\xde\xbc\xad\x5e\xbd\x3e\xaf\xf6\x7f\xdb\xb2\x52\x4d\x4a\x76\x7b\x66\x25\x28\xa7\x35\x39\xce\xb6\x4b\xb2\x25\x65\xfb\xd2\x4a\xb7\x3d\xb7\x54\xd7\x89\x73\x3e\x31\x66\x82\xcb\x8e\xc3\xf5\x72\x61\xfa\xd2\x42\x42\xd6\xa1\x0f\xee\xd8\x4f\x13\x7b\xa6\xcc\x98\xf6\x07\xb3\xd8\x71\xd8\x76\xe1\xa9\x7c\xfb\x6b\x50\xcc\xe5\x72\xb6\xb8\x5e\x2e\x6e\x2e\x2e\x17\x5f\x07\x54\x52\x58\x56\x67\xef\xca\x4a\x5c\x4c\xc1\x3a\x5f\xb2\x72\xaa\x6e\x73\x0c\xf8\x3b\x5e\x4b\x38\xae\x76\xc5\x57\xa2\xdc\x7e\xa7\xae\x9a\x2f\xbe\xcd\x2e\xae\x66\x5f\x86\x98\xe3\x13\x63\xd8\x35\x11\x53\xc6\xd1\x9f\xc7\x0b\xfe\xe1\xc3\x2e\x7d\xcf\x64\x9d\x17\x0e\x9a\x2b\x17\xc3\xda\x98\xdc\x67\xe5\xd6\xa9\x47\x56\x4a\xfa\x40\xfe\x71\xef\x7a\x34\xe7\x30\xbe\xb3\xa7\x06\x63\xcc\xff\x00\x00\x00\xff\xff\x6b\x29\x60\x15\xbe\x03\x00\x00")

func bootstrapVpnOpenvpnnodeCentosShBytes() ([]byte, error) {
	return bindataRead(
		_bootstrapVpnOpenvpnnodeCentosSh,
		"bootstrap/vpn/openvpnNode-centos.sh",
	)
}

func bootstrapVpnOpenvpnnodeCentosSh() (*asset, error) {
	bytes, err := bootstrapVpnOpenvpnnodeCentosShBytes()
	if err != nil {
		return nil, err
	}

<<<<<<< HEAD
<<<<<<< HEAD
	info := bindataFileInfo{name: "bootstrap/vpn/openvpnNode-centos.sh", size: 958, mode: os.FileMode(420), modTime: time.Unix(1505275252, 0)}
=======
<<<<<<< HEAD
	info := bindataFileInfo{name: "bootstrap/vpn/openvpnNode-centos.sh", size: 963, mode: os.FileMode(436), modTime: time.Unix(1502639666, 0)}
=======
	info := bindataFileInfo{name: "bootstrap/vpn/openvpnNode-centos.sh", size: 963, mode: os.FileMode(420), modTime: time.Unix(1503343145, 0)}
>>>>>>> Working vnets
>>>>>>> Working vnets
=======
	info := bindataFileInfo{name: "bootstrap/vpn/openvpnNode-centos.sh", size: 963, mode: os.FileMode(420), modTime: time.Unix(1503941556, 0)}
>>>>>>> Go fmt
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _bootstrapVpnOpenvpnnodeSh = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xc4\x92\xe1\x6b\x13\x41\x10\xc5\xbf\xef\x5f\xf1\x20\x85\x5a\x68\x6e\xad\x54\x41\x41\x51\x6b\x84\x08\xa6\x41\x4a\xfd\x58\x26\x7b\x93\xdc\xa4\x7b\xbb\xdb\xdd\xd9\xd4\xa0\xfe\xef\x72\x69\x2a\xad\xf8\xbd\xf7\xe5\x98\x99\xc7\x7b\x3f\x78\x3b\xc2\xf8\x89\x3e\x33\xc2\x77\x06\x65\x06\xff\x48\x5e\x9c\xa8\xdf\x22\x44\x45\x2d\x12\x56\x20\x28\xf7\xc9\x93\x0e\x83\xa7\xb0\xaa\xb4\x62\x68\x84\x84\x35\x3b\x85\x76\x8c\x0d\xf9\xca\x05\x54\x86\x3d\x07\x17\x6b\xde\x89\x3a\x46\x2d\x9c\x87\xad\x97\x5e\x76\x62\xc9\x66\x34\x6c\x11\x97\x8f\x9c\xe3\x4a\x1c\x24\x0c\x92\xc2\x58\x8a\xe7\xd2\xe0\xe3\x16\x2d\x17\x59\x05\x90\xf7\xfb\x44\x6e\xef\xf3\x4a\x17\xab\x6f\xb1\x60\xd0\xc2\xef\x98\x16\x8c\xc2\x0a\x52\xe4\x1a\x54\x7a\x3e\x36\x23\x50\x68\x77\x28\xa5\x63\xef\x51\x5c\x96\xa4\xc8\x4c\x1e\xb7\x31\x5f\x37\x98\x2e\xb1\x8d\x15\x81\xb9\x85\x8b\xa1\x15\x95\x18\xc8\xdf\x21\x1d\xe3\x36\x8b\x32\x44\x07\xb8\x05\x95\x0e\x31\xa3\xa7\x6b\x06\x85\xa8\x1d\xe7\x47\xbe\x8d\x79\xc2\x22\xcd\xfc\xdb\xf4\xf2\xc3\xc5\xe4\x6a\x3a\x7f\x7b\xf0\xcc\xd5\xec\xd1\xa9\xa6\x37\xd6\x9e\xbc\x7a\xdd\xbc\x78\x79\xda\xec\xff\xb6\x67\xa5\x96\x94\xec\xe6\xc4\x4a\x50\xce\x4b\x72\x5c\x6c\xca\xb2\x21\x65\xfb\xdc\x4a\xda\x9c\x5a\x6a\xdb\xcc\xa5\x1c\x19\x33\xc2\x79\xe2\x70\x39\x9f\x19\x43\x49\xc7\x2b\x56\xd4\xd4\x92\xf2\xdf\x51\x42\xd1\xa1\xa3\xf1\x16\x31\x71\xd8\xa4\xf0\xbf\xd3\xfa\xc6\x98\xf3\xf9\x64\x76\x39\x9f\x5d\x9d\x9d\xcf\x3e\x0f\x98\xa4\xb0\xac\xce\x5e\xd7\x85\xb8\x98\x83\x75\xbe\x16\xe5\xdc\xac\x4b\x0c\xf8\x85\xf5\x0d\xc6\x19\x87\xcd\x5d\xe9\x8d\x28\xf7\x5f\x29\x35\xd3\xd9\x97\xc9\xd9\xc5\xe4\xd3\x60\x73\x78\x64\x0c\xbb\x2e\x62\xcc\x38\xf8\xf9\x30\xe0\x37\xde\xdd\xb9\xef\xa1\xac\xf3\xc2\x41\x4b\xe3\x62\x58\x1a\x53\xb6\x45\xb9\x77\xea\x51\x94\xb2\xde\xa3\xbf\xdf\xab\x1e\xdc\x39\xec\xde\xd8\xbf\x82\x3f\x01\x00\x00\xff\xff\x54\xe0\x32\x8e\xb7\x03\x00\x00")

func bootstrapVpnOpenvpnnodeShBytes() ([]byte, error) {
	return bindataRead(
		_bootstrapVpnOpenvpnnodeSh,
		"bootstrap/vpn/openvpnNode.sh",
	)
}

func bootstrapVpnOpenvpnnodeSh() (*asset, error) {
	bytes, err := bootstrapVpnOpenvpnnodeShBytes()
	if err != nil {
		return nil, err
	}

<<<<<<< HEAD
<<<<<<< HEAD
	info := bindataFileInfo{name: "bootstrap/vpn/openvpnNode.sh", size: 951, mode: os.FileMode(420), modTime: time.Unix(1505275243, 0)}
=======
<<<<<<< HEAD
	info := bindataFileInfo{name: "bootstrap/vpn/openvpnNode.sh", size: 952, mode: os.FileMode(436), modTime: time.Unix(1502314777, 0)}
=======
	info := bindataFileInfo{name: "bootstrap/vpn/openvpnNode.sh", size: 952, mode: os.FileMode(420), modTime: time.Unix(1503343145, 0)}
>>>>>>> Working vnets
>>>>>>> Working vnets
=======
	info := bindataFileInfo{name: "bootstrap/vpn/openvpnNode.sh", size: 952, mode: os.FileMode(420), modTime: time.Unix(1503941556, 0)}
>>>>>>> Go fmt
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"bootstrap/README.md":                                 bootstrapReadmeMd,
	"bootstrap/amazon_k8s_centos_7_master.sh":             bootstrapAmazon_k8s_centos_7_masterSh,
	"bootstrap/amazon_k8s_centos_7_node.sh":               bootstrapAmazon_k8s_centos_7_nodeSh,
	"bootstrap/amazon_k8s_ubuntu_16.04_master.sh":         bootstrapAmazon_k8s_ubuntu_1604_masterSh,
	"bootstrap/amazon_k8s_ubuntu_16.04_node.sh":           bootstrapAmazon_k8s_ubuntu_1604_nodeSh,
	"bootstrap/bootstrap_init.sh":                         bootstrapBootstrap_initSh,
	"bootstrap/digitalocean_k8s_centos_7_master.sh":       bootstrapDigitalocean_k8s_centos_7_masterSh,
	"bootstrap/digitalocean_k8s_centos_7_node.sh":         bootstrapDigitalocean_k8s_centos_7_nodeSh,
	"bootstrap/digitalocean_k8s_ubuntu_16.04_master.sh":   bootstrapDigitalocean_k8s_ubuntu_1604_masterSh,
	"bootstrap/digitalocean_k8s_ubuntu_16.04_node.sh":     bootstrapDigitalocean_k8s_ubuntu_1604_nodeSh,
	"bootstrap/google_compute_k8s_ubuntu_16.04_master.sh": bootstrapGoogle_compute_k8s_ubuntu_1604_masterSh,
	"bootstrap/google_compute_k8s_ubuntu_16.04_node.sh":   bootstrapGoogle_compute_k8s_ubuntu_1604_nodeSh,
	"bootstrap/inject.go":                                 bootstrapInjectGo,
	"bootstrap/vpn/meshbirdMaster.sh":                     bootstrapVpnMeshbirdmasterSh,
	"bootstrap/vpn/meshbirdNode.sh":                       bootstrapVpnMeshbirdnodeSh,
	"bootstrap/vpn/openvpnMaster-centos.sh":               bootstrapVpnOpenvpnmasterCentosSh,
	"bootstrap/vpn/openvpnMaster.sh":                      bootstrapVpnOpenvpnmasterSh,
	"bootstrap/vpn/openvpnNode-centos.sh":                 bootstrapVpnOpenvpnnodeCentosSh,
	"bootstrap/vpn/openvpnNode.sh":                        bootstrapVpnOpenvpnnodeSh,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}

var _bintree = &bintree{nil, map[string]*bintree{
	"bootstrap": &bintree{nil, map[string]*bintree{
		"README.md":                                 &bintree{bootstrapReadmeMd, map[string]*bintree{}},
		"amazon_k8s_centos_7_master.sh":             &bintree{bootstrapAmazon_k8s_centos_7_masterSh, map[string]*bintree{}},
		"amazon_k8s_centos_7_node.sh":               &bintree{bootstrapAmazon_k8s_centos_7_nodeSh, map[string]*bintree{}},
		"amazon_k8s_ubuntu_16.04_master.sh":         &bintree{bootstrapAmazon_k8s_ubuntu_1604_masterSh, map[string]*bintree{}},
		"amazon_k8s_ubuntu_16.04_node.sh":           &bintree{bootstrapAmazon_k8s_ubuntu_1604_nodeSh, map[string]*bintree{}},
		"bootstrap_init.sh":                         &bintree{bootstrapBootstrap_initSh, map[string]*bintree{}},
		"digitalocean_k8s_centos_7_master.sh":       &bintree{bootstrapDigitalocean_k8s_centos_7_masterSh, map[string]*bintree{}},
		"digitalocean_k8s_centos_7_node.sh":         &bintree{bootstrapDigitalocean_k8s_centos_7_nodeSh, map[string]*bintree{}},
		"digitalocean_k8s_ubuntu_16.04_master.sh":   &bintree{bootstrapDigitalocean_k8s_ubuntu_1604_masterSh, map[string]*bintree{}},
		"digitalocean_k8s_ubuntu_16.04_node.sh":     &bintree{bootstrapDigitalocean_k8s_ubuntu_1604_nodeSh, map[string]*bintree{}},
		"google_compute_k8s_ubuntu_16.04_master.sh": &bintree{bootstrapGoogle_compute_k8s_ubuntu_1604_masterSh, map[string]*bintree{}},
		"google_compute_k8s_ubuntu_16.04_node.sh":   &bintree{bootstrapGoogle_compute_k8s_ubuntu_1604_nodeSh, map[string]*bintree{}},
		"inject.go":                                 &bintree{bootstrapInjectGo, map[string]*bintree{}},
		"vpn": &bintree{nil, map[string]*bintree{
			"meshbirdMaster.sh":       &bintree{bootstrapVpnMeshbirdmasterSh, map[string]*bintree{}},
			"meshbirdNode.sh":         &bintree{bootstrapVpnMeshbirdnodeSh, map[string]*bintree{}},
			"openvpnMaster-centos.sh": &bintree{bootstrapVpnOpenvpnmasterCentosSh, map[string]*bintree{}},
			"openvpnMaster.sh":        &bintree{bootstrapVpnOpenvpnmasterSh, map[string]*bintree{}},
			"openvpnNode-centos.sh":   &bintree{bootstrapVpnOpenvpnnodeCentosSh, map[string]*bintree{}},
			"openvpnNode.sh":          &bintree{bootstrapVpnOpenvpnnodeSh, map[string]*bintree{}},
		}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}
